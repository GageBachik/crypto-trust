{"version":3,"sources":["contracts sync /^/.*/.address/.js$","contracts/TrustFundManager.address.js","contracts/USDMToken.address.js","contracts/YourContract.address.js","contracts/TrustFundManager.abi.js","contracts/USDMToken.abi.js","contracts/YourContract.abi.js","contracts/TrustFundManager.bytecode.js","contracts/USDMToken.bytecode.js","contracts/YourContract.bytecode.js","contracts/contracts.js","hooks/OnBlock.js","hooks/Poller.js","hooks/Balance.js","hooks/ContractLoader.js","hooks/ContractReader.js","constants.js","hooks/UserProvider.js","components/Address.jsx","helpers/Transactor.js","components/Wallet.jsx","components/BytesStringInput.jsx","components/Contract/FunctionForm.jsx","components/Swap.jsx","components/ThemeSwitch.jsx","components/Timeline.jsx","components/CreateTrustForm.jsx","components/TrustModal.jsx","components/TrustCard.jsx","views/Trusts.jsx","views/Hints.jsx","views/Subgraph.jsx","App.jsx","hooks/ExchangePrice.js","hooks/GasPrice.js","hooks/ExternalContractLoader.js","hooks/EventListener.js","index.jsx","contracts sync /^/.*/.abi/.js$","contracts sync /^/.*/.bytecode/.js$"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","useOnBlock","provider","fn","args","savedCallback","useRef","useEffect","current","listener","blockNumber","length","on","off","usePoller","delay","extraWatch","setInterval","clearInterval","useBalance","address","pollTime","useState","balance","setBalance","pollBalance","useCallback","a","getBalance","newBalance","loadContract","contractName","signer","newContract","Contract","require","bytecode","console","log","useContractLoader","providerOrSigner","contracts","setContracts","listAccounts","accounts","getSigner","contractList","newContracts","reduce","accumulator","loadContracts","useContractReader","functionName","formatter","onChange","adjustPollTime","value","setValue","setTimeout","bind","updateValue","newValue","INFURA_ID","DAI_ABI","inputs","internalType","name","type","payable","stateMutability","anonymous","indexed","constant","outputs","NETWORKS","localhost","color","chainId","blockExplorer","rpcUrl","window","location","hostname","mainnet","kovan","faucet","rinkeby","ropsten","goerli","xdai","price","gasPrice","matic","mumbai","NETWORK","n","useUserProvider","injectedProvider","localProvider","useMemo","burnerConfig","pathname","indexOf","rawPK","incomingPK","hash","replace","privateKey","history","pushState","currentPrivateKey","localStorage","getItem","setItem","Date","now","connection","url","Web3Provider","BurnerProvider","networkName","_network","Typography","Text","callbacks","Transactor","etherscan","tx","callback","getNetwork","network","options","dappId","system","networkId","transactionHandler","txInformation","possibleFunction","transaction","notify","Notify","etherscanNetwork","etherscanTxUrl","Promise","result","parseUnits","gasLimit","hexlify","sendTransaction","emitter","onclick","open","notification","info","message","description","placement","txResult","listeningInterval","getTransactionReceipt","currentTransactionReceipt","confirmations","error","Paragraph","utils","constants","Select","Option","Swap","ThemeSwitcher","isDarkMode","setIsDarkMode","theme","themeChange","className","style","position","right","bottom","padding","htmlFor","checked","data-toggle-theme","data-act-class","onClick","previous","CreateTrustForm","props","onSubmit","onCancel","addressRef","dayRef","monthRef","yearRef","handleSubmit","day","month","year","ref","placeholder","defaultValue","selected","TrustModal","trust","writeContracts","amountRef","tokenRef","amount","TrustFundManager","deposit","parseEther","TrustCard","readContracts","mainnetMatic","web3","Web3","currPrice","setCurrPrice","eth","methods","latestRoundData","call","then","roundData","answer","currentBlockTimestamp","setCurrentBlockTimestamp","getBlock","block","timestamp","fetchTimestamp","moment","unix","toNumber","format","formatEther","toString","toFixed","withdrawTrust","Trusts","showCreateTrustForm","setShowCreateTrustForm","coins","TVL","setTVL","fetch","response","json","data","items","coin","quote","item","contract_ticker_symbol","push","fetchData","totalTrusts","myTrustFund","totalTrustNumber","beneficiaryAddress","matureDate","createTrust","handleCancel","xmlns","fill","viewBox","strokeLinecap","strokeLinejoin","strokeWidth","d","Subgraph","targetNetwork","scaffoldEthProvider","StaticJsonRpcProvider","mainnetInfura","localProviderUrl","localProviderUrlFromEnv","process","REACT_APP_PROVIDER","web3Modal","Web3Modal","cacheProvider","providerOptions","walletconnect","package","WalletConnectProvider","infuraId","ethereum","cachedProvider","reload","App","mainnetProvider","setInjectedProvider","setPrice","DAI","Token","Fetcher","fetchPairData","WETH","pair","route","Route","parseFloat","midPrice","toSignificant","getPrice","useExchangePrice","speed","setGasPrice","loadGasPrice","axios","get","newGasPrice","catch","useGasPrice","userProvider","useUserAddress","localChainId","selectedChainId","faucetTx","yourLocalBalance","ABI","optionalBytecode","contract","setContract","customContract","useExternalContractLoader","_lastBlockNumber","eventName","startBlock","updates","setUpdates","resetEventsBlock","messages","pop","removeListener","useEventListener","networkSelected","networkLocal","zIndex","top","closable","loadWeb3Modal","connect","setRoute","faucetClicked","setFaucetClicked","to","exact","path","subgraphUri","client","ApolloClient","uri","cache","InMemoryCache","ReactDOM","render","ApolloProvider","document","getElementById"],"mappings":"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","file":"static/js/main.80dcb5f8.chunk.js","sourcesContent":["var map = {\n\t\"./TrustFundManager.address.js\": 1187,\n\t\"./USDMToken.address.js\": 1188,\n\t\"./YourContract.address.js\": 1189\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 1186;","module.exports = \"0x941AC5264e57b5875F92378166229A7089e20c55\";","module.exports = \"0x79536858465e5cD6e502687C3d7F418c167C99Ed\";","module.exports = \"0x5FbDB2315678afecb367f032d93F642f64180aa3\";","module.exports = [\n  {\n    \"inputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"constructor\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"internalType\": \"address\",\n        \"name\": \"previousOwner\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"internalType\": \"address\",\n        \"name\": \"newOwner\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"OwnershipTransferred\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"internalType\": \"address\",\n        \"name\": \"beneficiary\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"internalType\": \"uint256\",\n        \"name\": \"timelock\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"TrustCreated\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"internalType\": \"address\",\n        \"name\": \"beneficiary\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"TrustWithdrawn\",\n    \"type\": \"event\"\n  },\n  {\n    \"stateMutability\": \"payable\",\n    \"type\": \"fallback\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"balances\",\n    \"outputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"chainTokenAddress\",\n    \"outputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"chainTokenBalance\",\n    \"outputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"_beneficiary\",\n        \"type\": \"address\"\n      },\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"_timelock\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"createTrust\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"_token\",\n        \"type\": \"address\"\n      },\n      {\n        \"internalType\": \"address\",\n        \"name\": \"_beneficiary\",\n        \"type\": \"address\"\n      },\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"_amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"deposit\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"_beneficiary\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"getActiveTrust\",\n    \"outputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"\",\n        \"type\": \"address\"\n      },\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"internalType\": \"address[]\",\n        \"name\": \"\",\n        \"type\": \"address[]\"\n      },\n      {\n        \"internalType\": \"uint256[]\",\n        \"name\": \"\",\n        \"type\": \"uint256[]\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"getBankBalance\",\n    \"outputs\": [\n      {\n        \"internalType\": \"address[]\",\n        \"name\": \"\",\n        \"type\": \"address[]\"\n      },\n      {\n        \"internalType\": \"uint256[]\",\n        \"name\": \"\",\n        \"type\": \"uint256[]\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"getThePrice\",\n    \"outputs\": [\n      {\n        \"internalType\": \"int256\",\n        \"name\": \"\",\n        \"type\": \"int256\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"owner\",\n    \"outputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"renounceOwnership\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"safetyWithdraw\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"tokenList\",\n    \"outputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"totalTrusts\",\n    \"outputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"newOwner\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"transferOwnership\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"_beneficiary\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"withdrawTrust\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  }\n];","module.exports = [\n  {\n    \"inputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"constructor\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"internalType\": \"address\",\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"internalType\": \"address\",\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"internalType\": \"uint256\",\n        \"name\": \"value\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Approval\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"internalType\": \"address\",\n        \"name\": \"from\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"internalType\": \"address\",\n        \"name\": \"to\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"internalType\": \"uint256\",\n        \"name\": \"value\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Transfer\",\n    \"type\": \"event\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      },\n      {\n        \"internalType\": \"address\",\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"allowance\",\n    \"outputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      },\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"approve\",\n    \"outputs\": [\n      {\n        \"internalType\": \"bool\",\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"balanceOf\",\n    \"outputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"decimals\",\n    \"outputs\": [\n      {\n        \"internalType\": \"uint8\",\n        \"name\": \"\",\n        \"type\": \"uint8\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      },\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"subtractedValue\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"decreaseAllowance\",\n    \"outputs\": [\n      {\n        \"internalType\": \"bool\",\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      },\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"addedValue\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"increaseAllowance\",\n    \"outputs\": [\n      {\n        \"internalType\": \"bool\",\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"name\",\n    \"outputs\": [\n      {\n        \"internalType\": \"string\",\n        \"name\": \"\",\n        \"type\": \"string\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"symbol\",\n    \"outputs\": [\n      {\n        \"internalType\": \"string\",\n        \"name\": \"\",\n        \"type\": \"string\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"totalSupply\",\n    \"outputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"recipient\",\n        \"type\": \"address\"\n      },\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"transfer\",\n    \"outputs\": [\n      {\n        \"internalType\": \"bool\",\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"sender\",\n        \"type\": \"address\"\n      },\n      {\n        \"internalType\": \"address\",\n        \"name\": \"recipient\",\n        \"type\": \"address\"\n      },\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"transferFrom\",\n    \"outputs\": [\n      {\n        \"internalType\": \"bool\",\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  }\n];","module.exports = [\n  {\n    \"inputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"constructor\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"internalType\": \"address\",\n        \"name\": \"sender\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"internalType\": \"string\",\n        \"name\": \"purpose\",\n        \"type\": \"string\"\n      }\n    ],\n    \"name\": \"SetPurpose\",\n    \"type\": \"event\"\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"purpose\",\n    \"outputs\": [\n      {\n        \"internalType\": \"string\",\n        \"name\": \"\",\n        \"type\": \"string\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"string\",\n        \"name\": \"newPurpose\",\n        \"type\": \"string\"\n      }\n    ],\n    \"name\": \"setPurpose\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  }\n];","module.exports = \"0x6080604052600280546001600160a01b031916905534801561002057600080fd5b5061003161002c6100b5565b6100b9565b6002805460048054600181019091557f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b0180546001600160a01b03199081166001600160a01b03938416179091559154166000908152600660205260408120556007805490911673ab594600376ec9fd91f8e885dadf0ce036862de0179055610109565b3390565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b61129c806101186000396000f3fe6080604052600436106100e85760003560e01c806382ad417b1161008a57806393322f571161005957806393322f571461025a5780639ead72221461027a578063f2fde38b1461029a578063f5279a6e146102ba576100e8565b806382ad417b146101fb5780638340f549146102105780638c3c9a55146102235780638da5cb5b14610238576100e8565b80634035fe30116100c65780634035fe301461017e57806360eaebdb14610193578063715018a6146101c35780637b83b50b146101d8576100e8565b806327e235e3146101135780632946039f146101495780633fe917cb1461015e575b6101116040518060400160405280600881526020016766616c6c6261636b60c01b8152506102cf565b005b34801561011f57600080fd5b5061013361012e366004610df4565b610315565b6040516101409190611080565b60405180910390f35b34801561015557600080fd5b50610111610327565b34801561016a57600080fd5b50610111610179366004610df4565b61039b565b34801561018a57600080fd5b506101336105b0565b34801561019f57600080fd5b506101b36101ae366004610df4565b6105b6565b604051610140949392919061100e565b3480156101cf57600080fd5b5061011161078d565b3480156101e457600080fd5b506101ed6107d8565b604051610140929190611052565b34801561020757600080fd5b50610133610930565b61011161021e366004610e15565b610936565b34801561022f57600080fd5b50610133610ab0565b34801561024457600080fd5b5061024d610b4e565b6040516101409190610fbd565b34801561026657600080fd5b50610111610275366004610e50565b610b5d565b34801561028657600080fd5b5061024d610295366004610e99565b610c59565b3480156102a657600080fd5b506101116102b5366004610df4565b610c83565b3480156102c657600080fd5b5061024d610cf1565b610312816040516024016102e39190611089565b60408051601f198184030181529190526020810180516001600160e01b031663104c13eb60e21b179052610d00565b50565b60066020526000908152604090205481565b61032f610d21565b6001600160a01b0316610340610b4e565b6001600160a01b03161461036f5760405162461bcd60e51b81526004016103669061116a565b60405180910390fd5b60405133904780156108fc02916000818181858888f19350505050158015610312573d6000803e3d6000fd5b6001600160a01b03811633146103c35760405162461bcd60e51b81526004016103669061119f565b6001600160a01b0381166000908152600560205260409020600181015442116103fe5760405162461bcd60e51b815260040161036690611104565b805460ff1615156001146104245760405162461bcd60e51b815260040161036690611133565b805460ff191681556000600182018190556002546001600160a01b0316815260058201602052604080822080549083905590513392839183156108fc0291849190818181858888f19350505050158015610482573d6000803e3d6000fd5b5060015b60038401548110156105725760008460030182815481106104b757634e487b7160e01b600052603260045260246000fd5b60009182526020808320909101546001600160a01b03168083526005880190915260408083208054939055516323b872dd60e01b815290925082906323b872dd9061050a90309089908690600401610fd1565b602060405180830381600087803b15801561052457600080fd5b505af1158015610538573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061055c9190610e79565b505050808061056a90611235565b915050610486565b507f299c8f53b6025fd1783e9f8104a786e1c079d8edfc6affe9fbab19f50cedcdf1846040516105a29190610fbd565b60405180910390a150505050565b60015481565b6001600160a01b038116600090815260056020908152604080832060038101805483518186028101860190945280845285946060948594938793919290919083018282801561062e57602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610610575b505050505090506000815167ffffffffffffffff81111561065f57634e487b7160e01b600052604160045260246000fd5b604051908082528060200260200182016040528015610688578160200160208202803683370190505b50905060005b8251811015610778576106ec6040518060400160405280600c81526020016b6375727262616c616e63657360a01b8152508383815181106106df57634e487b7160e01b600052603260045260246000fd5b6020026020010151610d25565b83600501600084838151811061071257634e487b7160e01b600052603260045260246000fd5b60200260200101516001600160a01b03166001600160a01b031681526020019081526020016000205482828151811061075b57634e487b7160e01b600052603260045260246000fd5b60209081029190910101528061077081611235565b91505061068e565b50600192909201549697909550909350915050565b610795610d21565b6001600160a01b03166107a6610b4e565b6001600160a01b0316146107cc5760405162461bcd60e51b81526004016103669061116a565b6107d66000610d6e565b565b6060806000600480548060200260200160405190810160405280929190818152602001828054801561083357602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610815575b505050505090506000815167ffffffffffffffff81111561086457634e487b7160e01b600052604160045260246000fd5b60405190808252806020026020018201604052801561088d578160200160208202803683370190505b50905060005b825181101561092657600660008483815181106108c057634e487b7160e01b600052603260045260246000fd5b60200260200101516001600160a01b03166001600160a01b031681526020019081526020016000205482828151811061090957634e487b7160e01b600052603260045260246000fd5b60209081029190910101528061091e81611235565b915050610893565b5090925090509091565b60035481565b6001600160a01b038083166000908152600560205260409020600254909185811691161415610994576001600160a01b03841660009081526005820160205260408120805434929061098990849061121d565b90915550610aaa9050565b60405163a9059cbb60e01b81526001600160a01b0385169063a9059cbb906109c29030908690600401610ff5565b602060405180830381600087803b1580156109dc57600080fd5b505af11580156109f0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a149190610e79565b506001600160a01b0384166000908152600482016020526040902054610a7a57600381018054600180820183556000928352602080842090920180546001600160a01b0319166001600160a01b0389169081179091558352600484019091526040909120555b6001600160a01b038416600090815260058201602052604081208054849290610aa490849061121d565b90915550505b50505050565b600080600080600080600760009054906101000a90046001600160a01b03166001600160a01b031663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b158015610b0757600080fd5b505afa158015610b1b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b3f9190610eb1565b50919850505050505050505090565b6000546001600160a01b031690565b6001600160a01b0382166000908152600560205260409020600181015415610b975760405162461bcd60e51b8152600401610366906111e6565b805460ff1916600117815560408051808201909152600881526774696d656c6f636b60c01b6020820152610bcb9083610d25565b600180820183905560025460038301805480840182556000918252602082200180546001600160a01b0319166001600160a01b039093169290921790915581549190610c1683611235565b91905055507f77e46004760633d69f1a81ac763544ccae4882fb5fb5579dab21543cc9946fb88383604051610c4c929190610ff5565b60405180910390a1505050565b60048181548110610c6957600080fd5b6000918252602090912001546001600160a01b0316905081565b610c8b610d21565b6001600160a01b0316610c9c610b4e565b6001600160a01b031614610cc25760405162461bcd60e51b81526004016103669061116a565b6001600160a01b038116610ce85760405162461bcd60e51b8152600401610366906110be565b61031281610d6e565b6002546001600160a01b031681565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b3390565b610d6a8282604051602401610d3b92919061109c565b60408051601f198184030181529190526020810180516001600160e01b03166309710a9d60e41b179052610d00565b5050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80356001600160a01b0381168114610dd557600080fd5b919050565b805169ffffffffffffffffffff81168114610dd557600080fd5b600060208284031215610e05578081fd5b610e0e82610dbe565b9392505050565b600080600060608486031215610e29578182fd5b610e3284610dbe565b9250610e4060208501610dbe565b9150604084013590509250925092565b60008060408385031215610e62578182fd5b610e6b83610dbe565b946020939093013593505050565b600060208284031215610e8a578081fd5b81518015158114610e0e578182fd5b600060208284031215610eaa578081fd5b5035919050565b600080600080600060a08688031215610ec8578081fd5b610ed186610dda565b9450602086015193506040860151925060608601519150610ef460808701610dda565b90509295509295909350565b6000815180845260208085019450808401835b83811015610f385781516001600160a01b031687529582019590820190600101610f13565b509495945050505050565b6000815180845260208085019450808401835b83811015610f3857815187529582019590820190600101610f56565b60008151808452815b81811015610f9757602081850181015186830182015201610f7b565b81811115610fa85782602083870101525b50601f01601f19169290920160200192915050565b6001600160a01b0391909116815260200190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b03929092168252602082015260400190565b600060018060a01b0386168252846020830152608060408301526110356080830185610f00565b82810360608401526110478185610f43565b979650505050505050565b6000604082526110656040830185610f00565b82810360208401526110778185610f43565b95945050505050565b90815260200190565b600060208252610e0e6020830184610f72565b6000604082526110af6040830185610f72565b90508260208301529392505050565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b6020808252601590820152742a393ab9ba103737ba1036b0ba3ab932903cb2ba1760591b604082015260600190565b60208082526018908201527f547275737420616c7265616479207061796564206f75742e0000000000000000604082015260600190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60208082526027908201527f596f75277265206e6f74207468652062656e65666963696179206f66207468696040820152661cc81d1c9d5cdd60ca1b606082015260800190565b60208082526018908201527f596f7520416c7265616479204861766520412054727573740000000000000000604082015260600190565b6000821982111561123057611230611250565b500190565b600060001982141561124957611249611250565b5060010190565b634e487b7160e01b600052601160045260246000fdfea2646970667358221220672d9f03423e1a939e65903bcbbfe66e429bc9bb22520666ba9fb72dcc24fda964736f6c63430008000033\";","module.exports = \"0x60806040523480156200001157600080fd5b5060408051808201825260098152682aa9a226aa37b5b2b760b91b6020808301918252835180850190945260048452635553444d60e01b9084015281519192916200005f916003916200019f565b508051620000759060049060208401906200019f565b505050620000ad336200008d620000b360201b60201c565b6200009a90600a620002ed565b620000a7906064620003e5565b620000b8565b6200045a565b601290565b6001600160a01b038216620000ea5760405162461bcd60e51b8152600401620000e19062000245565b60405180910390fd5b620000f8600083836200019a565b80600260008282546200010c919062000285565b90915550506001600160a01b038216600090815260208190526040812080548392906200013b90849062000285565b90915550506040516001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90620001809085906200027c565b60405180910390a362000196600083836200019a565b5050565b505050565b828054620001ad9062000407565b90600052602060002090601f016020900481019282620001d157600085556200021c565b82601f10620001ec57805160ff19168380011785556200021c565b828001600101855582156200021c579182015b828111156200021c578251825591602001919060010190620001ff565b506200022a9291506200022e565b5090565b5b808211156200022a57600081556001016200022f565b6020808252601f908201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604082015260600190565b90815260200190565b600082198211156200029b576200029b62000444565b500190565b80825b6001808611620002b45750620002e4565b818704821115620002c957620002c962000444565b80861615620002d757918102915b9490941c938002620002a3565b94509492505050565b60006200030160001960ff85168462000308565b9392505050565b600082620003195750600162000301565b81620003285750600062000301565b81600181146200034157600281146200034c5762000380565b600191505062000301565b60ff84111562000360576200036062000444565b6001841b91508482111562000379576200037962000444565b5062000301565b5060208310610133831016604e8410600b8410161715620003b8575081810a83811115620003b257620003b262000444565b62000301565b620003c78484846001620002a0565b808604821115620003dc57620003dc62000444565b02949350505050565b600081600019048311821515161562000402576200040262000444565b500290565b6002810460018216806200041c57607f821691505b602082108114156200043e57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b6109bd806200046a6000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461012957806370a082311461013c57806395d89b411461014f578063a457c2d714610157578063a9059cbb1461016a578063dd62ed3e1461017d576100a9565b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100ec57806323b872dd14610101578063313ce56714610114575b600080fd5b6100b6610190565b6040516100c391906106dd565b60405180910390f35b6100df6100da3660046106a9565b610222565b6040516100c391906106d2565b6100f461023f565b6040516100c39190610911565b6100df61010f36600461066e565b610245565b61011c6102de565b6040516100c3919061091a565b6100df6101373660046106a9565b6102e3565b6100f461014a36600461061b565b610337565b6100b6610356565b6100df6101653660046106a9565b610365565b6100df6101783660046106a9565b6103de565b6100f461018b36600461063c565b6103f2565b60606003805461019f9061094c565b80601f01602080910402602001604051908101604052809291908181526020018280546101cb9061094c565b80156102185780601f106101ed57610100808354040283529160200191610218565b820191906000526020600020905b8154815290600101906020018083116101fb57829003601f168201915b5050505050905090565b600061023661022f61041d565b8484610421565b50600192915050565b60025490565b60006102528484846104d5565b6001600160a01b03841660009081526001602052604081208161027361041d565b6001600160a01b03166001600160a01b03168152602001908152602001600020549050828110156102bf5760405162461bcd60e51b81526004016102b6906107fb565b60405180910390fd5b6102d3856102cb61041d565b858403610421565b506001949350505050565b601290565b60006102366102f061041d565b8484600160006102fe61041d565b6001600160a01b03908116825260208083019390935260409182016000908120918b16815292529020546103329190610928565b610421565b6001600160a01b0381166000908152602081905260409020545b919050565b60606004805461019f9061094c565b6000806001600061037461041d565b6001600160a01b03908116825260208083019390935260409182016000908120918816815292529020549050828110156103c05760405162461bcd60e51b81526004016102b6906108cc565b6103d46103cb61041d565b85858403610421565b5060019392505050565b60006102366103eb61041d565b84846104d5565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b3390565b6001600160a01b0383166104475760405162461bcd60e51b81526004016102b690610888565b6001600160a01b03821661046d5760405162461bcd60e51b81526004016102b690610773565b6001600160a01b0380841660008181526001602090815260408083209487168084529490915290819020849055517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925906104c8908590610911565b60405180910390a3505050565b6001600160a01b0383166104fb5760405162461bcd60e51b81526004016102b690610843565b6001600160a01b0382166105215760405162461bcd60e51b81526004016102b690610730565b61052c8383836105ff565b6001600160a01b038316600090815260208190526040902054818110156105655760405162461bcd60e51b81526004016102b6906107b5565b6001600160a01b0380851660009081526020819052604080822085850390559185168152908120805484929061059c908490610928565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516105e69190610911565b60405180910390a36105f98484846105ff565b50505050565b505050565b80356001600160a01b038116811461035157600080fd5b60006020828403121561062c578081fd5b61063582610604565b9392505050565b6000806040838503121561064e578081fd5b61065783610604565b915061066560208401610604565b90509250929050565b600080600060608486031215610682578081fd5b61068b84610604565b925061069960208501610604565b9150604084013590509250925092565b600080604083850312156106bb578182fd5b6106c483610604565b946020939093013593505050565b901515815260200190565b6000602080835283518082850152825b81811015610709578581018301518582016040015282016106ed565b8181111561071a5783604083870101525b50601f01601f1916929092016040019392505050565b60208082526023908201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260408201526265737360e81b606082015260800190565b60208082526022908201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604082015261737360f01b606082015260800190565b60208082526026908201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604082015265616c616e636560d01b606082015260800190565b60208082526028908201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616040820152676c6c6f77616e636560c01b606082015260800190565b60208082526025908201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604082015264647265737360d81b606082015260800190565b60208082526024908201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646040820152637265737360e01b606082015260800190565b60208082526025908201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604082015264207a65726f60d81b606082015260800190565b90815260200190565b60ff91909116815260200190565b6000821982111561094757634e487b7160e01b81526011600452602481fd5b500190565b60028104600182168061096057607f821691505b6020821081141561098157634e487b7160e01b600052602260045260246000fd5b5091905056fea26469706673582212201eed652b0bc03c75570bfb91600b339d8af715a86fb916055c21aefb50db9fef64736f6c63430008000033\";","module.exports = \"0x60c0604052601960808190527f4275696c64696e6720556e73746f707061626c6520417070730000000000000060a090815261003e9160009190610051565b5034801561004b57600080fd5b50610125565b82805461005d906100ea565b90600052602060002090601f01602090048101928261007f57600085556100c5565b82601f1061009857805160ff19168380011785556100c5565b828001600101855582156100c5579182015b828111156100c55782518255916020019190600101906100aa565b506100d19291506100d5565b5090565b5b808211156100d157600081556001016100d6565b6002810460018216806100fe57607f821691505b6020821081141561011f57634e487b7160e01b600052602260045260246000fd5b50919050565b6105ae806101346000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c806370740aab1461003b578063eb68757f14610059575b600080fd5b61004361006e565b60405161005091906104f8565b60405180910390f35b61006c61006736600461030e565b6100fc565b005b6000805461007b90610527565b80601f01602080910402602001604051908101604052809291908181526020018280546100a790610527565b80156100f45780601f106100c9576101008083540402835291602001916100f4565b820191906000526020600020905b8154815290600101906020018083116100d757829003601f168201915b505050505081565b805161010f906000906020840190610275565b506101cb336040518060400160405280600e81526020016d73657420707572706f736520746f60901b8152506000805461014890610527565b80601f016020809104026020016040519081016040528092919081815260200182805461017490610527565b80156101c15780601f10610196576101008083540402835291602001916101c1565b820191906000526020600020905b8154815290600101906020018083116101a457829003601f168201915b5050505050610208565b7f6ea5d6383a120235c7728a9a6751672a8ac068e4ed34dcca2ee444182c1812de3360006040516101fd92919061043a565b60405180910390a150565b61024f838383604051602401610220939291906103fa565b60408051601f198184030181529190526020810180516001600160e01b031663fb77226560e01b179052610254565b505050565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b82805461028190610527565b90600052602060002090601f0160209004810192826102a357600085556102e9565b82601f106102bc57805160ff19168380011785556102e9565b828001600101855582156102e9579182015b828111156102e95782518255916020019190600101906102ce565b506102f59291506102f9565b5090565b5b808211156102f557600081556001016102fa565b60006020808385031215610320578182fd5b823567ffffffffffffffff80821115610337578384fd5b818501915085601f83011261034a578384fd5b81358181111561035c5761035c610562565b604051601f8201601f191681018501838111828210171561037f5761037f610562565b6040528181528382018501881015610395578586fd5b818585018683013790810190930193909352509392505050565b60008151808452815b818110156103d4576020818501810151868301820152016103b8565b818111156103e55782602083870101525b50601f01601f19169290920160200192915050565b6001600160a01b038416815260606020820181905260009061041e908301856103af565b828103604084015261043081856103af565b9695505050505050565b6001600160a01b0383168152604060208083019190915282546000919082906002810460018281168061046e57607f831692505b85831081141561048c57634e487b7160e01b87526022600452602487fd5b6104998360408a0161051e565b8180156104ad57600181146104be576104e8565b60ff198616825287820196506104e8565b6104c78b610512565b895b868110156104e2578154848201529085019089016104c9565b83019750505b50949a9950505050505050505050565b60006020825261050b60208301846103af565b9392505050565b60009081526020902090565b90815260200190565b60028104600182168061053b57607f821691505b6020821081141561055c57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fdfea2646970667358221220a5c6785c376db87d1ba4bbfa327b57121ab33330aa7329c9706264dc76deb98564736f6c63430008000033\";","module.exports = [\"TrustFundManager\",\"USDMToken\"];","import { useEffect, useRef } from 'react';\r\n\r\n// helper hook to call a function regularly in time intervals\r\nconst DEBUG = false;\r\n\r\nexport default function useOnBlock(provider, fn, args) {\r\n  const savedCallback = useRef();\r\n  // Remember the latest fn.\r\n  useEffect(() => {\r\n    savedCallback.current = fn;\r\n  }, [fn]);\r\n\r\n  // Turn on the listener if we have a function & a provider\r\n  useEffect(() => {\r\n    if (fn && provider) {\r\n      const listener = blockNumber => {\r\n        if (DEBUG) console.log(blockNumber, fn, args, provider.listeners());\r\n\r\n        if (args && args.length > 0) {\r\n          savedCallback.current(...args);\r\n        } else {\r\n          savedCallback.current();\r\n        }\r\n      };\r\n\r\n      provider.on('block', listener);\r\n\r\n      return () => {\r\n        provider.off('block', listener);\r\n      };\r\n    }\r\n  }, [provider]);\r\n}\r\n","import { useEffect, useRef } from 'react';\r\n\r\n// helper hook to call a function regularly in time intervals\r\n\r\nexport default function usePoller(fn, delay, extraWatch) {\r\n  const savedCallback = useRef();\r\n  // Remember the latest fn.\r\n  useEffect(() => {\r\n    savedCallback.current = fn;\r\n  }, [fn]);\r\n  // Set up the interval.\r\n  // eslint-disable-next-line consistent-return\r\n  useEffect(() => {\r\n    function tick() {\r\n      savedCallback.current();\r\n    }\r\n    if (delay !== null) {\r\n      const id = setInterval(tick, delay);\r\n      return () => clearInterval(id);\r\n    }\r\n  }, [delay]);\r\n  // run at start too\r\n  useEffect(() => {\r\n    fn();\r\n  }, [extraWatch]);\r\n}\r\n","import { useCallback, useState } from 'react';\r\nimport useOnBlock from './OnBlock';\r\nimport usePoller from './Poller';\r\n\r\n/*\r\n  ~ What it does? ~\r\n\r\n  Gets your balance in ETH from given address and provider\r\n\r\n  ~ How can I use? ~\r\n\r\n  const yourLocalBalance = useBalance(localProvider, address);\r\n\r\n  ~ Features ~\r\n\r\n  - Provide address and get balance corresponding to given address\r\n  - Change provider to access balance on different chains (ex. mainnetProvider)\r\n  - If no pollTime is passed, the balance will update on every new block\r\n*/\r\n\r\nconst DEBUG = false;\r\n\r\nexport default function useBalance(provider, address, pollTime = 0) {\r\n  const [balance, setBalance] = useState();\r\n\r\n  const pollBalance = useCallback(async () => {\r\n    if (provider && address) {\r\n      const newBalance = await provider.getBalance(address);\r\n      if (newBalance !== balance) {\r\n        setBalance(newBalance);\r\n      }\r\n    }\r\n  }, [provider, address]);\r\n\r\n  // Only pass a provider to watch on a block if there is no pollTime\r\n  useOnBlock(pollTime === 0 && provider, () => {\r\n    if (provider && address && pollTime === 0) {\r\n      pollBalance();\r\n    }\r\n  });\r\n\r\n  // Use a poller if a pollTime is provided\r\n  usePoller(\r\n    async () => {\r\n      if (provider && address && pollTime > 0) {\r\n        if (DEBUG) console.log('polling!', address);\r\n        pollBalance();\r\n      }\r\n    },\r\n    pollTime,\r\n    provider && address,\r\n  );\r\n\r\n  return balance;\r\n}\r\n","/* eslint-disable import/no-dynamic-require */\r\n/* eslint-disable global-require */\r\nimport { Contract } from '@ethersproject/contracts';\r\nimport { useEffect, useState } from 'react';\r\n\r\n/*\r\n  ~ What it does? ~\r\n\r\n  Loads your local contracts and gives options to read values from contracts\r\n  or write transactions into them\r\n\r\n  ~ How can I use? ~\r\n\r\n  const readContracts = useContractLoader(localProvider) // or\r\n  const writeContracts = useContractLoader(userProvider)\r\n\r\n  ~ Features ~\r\n\r\n  - localProvider enables reading values from contracts\r\n  - userProvider enables writing transactions into contracts\r\n  - Example of keeping track of \"purpose\" variable by loading contracts into readContracts\r\n    and using ContractReader.js hook:\r\n    const purpose = useContractReader(readContracts,\"YourContract\", \"purpose\")\r\n  - Example of using setPurpose function from our contract and writing transactions by Transactor.js helper:\r\n    tx( writeContracts.YourContract.setPurpose(newPurpose) )\r\n*/\r\n\r\nconst loadContract = (contractName, signer) => {\r\n  const newContract = new Contract(\r\n    require(`../contracts/${contractName}.address.js`),\r\n    require(`../contracts/${contractName}.abi.js`),\r\n    signer,\r\n  );\r\n  try {\r\n    newContract.bytecode = require(`../contracts/${contractName}.bytecode.js`);\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n  return newContract;\r\n};\r\n\r\nexport default function useContractLoader(providerOrSigner) {\r\n  const [contracts, setContracts] = useState();\r\n  useEffect(() => {\r\n    async function loadContracts() {\r\n      if (typeof providerOrSigner !== 'undefined') {\r\n        try {\r\n          // we need to check to see if this providerOrSigner has a signer or not\r\n          let signer;\r\n          let accounts;\r\n          if (providerOrSigner && typeof providerOrSigner.listAccounts === 'function') {\r\n            accounts = await providerOrSigner.listAccounts();\r\n          }\r\n\r\n          if (accounts && accounts.length > 0) {\r\n            signer = providerOrSigner.getSigner();\r\n          } else {\r\n            signer = providerOrSigner;\r\n          }\r\n\r\n          const contractList = require('../contracts/contracts');\r\n\r\n          const newContracts = contractList.reduce((accumulator, contractName) => {\r\n            accumulator[contractName] = loadContract(contractName, signer);\r\n            return accumulator;\r\n          }, {});\r\n          setContracts(newContracts);\r\n        } catch (e) {\r\n          console.log('ERROR LOADING CONTRACTS!!', e);\r\n        }\r\n      }\r\n    }\r\n    loadContracts();\r\n  }, [providerOrSigner]);\r\n  return contracts;\r\n}\r\n","import { useEffect, useState } from 'react';\r\nimport useOnBlock from './OnBlock';\r\nimport usePoller from './Poller';\r\n\r\nconst DEBUG = false;\r\n\r\n/*\r\n  ~ What it does? ~\r\n\r\n  Enables you to read values from contracts and keep track of them in the local React states\r\n\r\n  ~ How can I use? ~\r\n\r\n  const purpose = useContractReader(readContracts,\"YourContract\", \"purpose\")\r\n\r\n  ~ Features ~\r\n\r\n  - Provide readContracts by loading contracts (see more on ContractLoader.js)\r\n  - Specify the name of the contract, in this case it is \"YourContract\"\r\n  - Specify the name of the variable in the contract, in this case we keep track of \"purpose\" variable\r\n  - Pass an args array if the function requires\r\n  - Pass pollTime - if no pollTime is specified, the function will update on every new block\r\n*/\r\n\r\nexport default function useContractReader(contracts, contractName, functionName, args, pollTime, formatter, onChange) {\r\n  let adjustPollTime = 0;\r\n  if (pollTime) {\r\n    adjustPollTime = pollTime;\r\n  } else if (!pollTime && typeof args === 'number') {\r\n    // it's okay to pass poll time as last argument without args for the call\r\n    adjustPollTime = args;\r\n  }\r\n\r\n  const [value, setValue] = useState();\r\n  useEffect(() => {\r\n    if (typeof onChange === 'function') {\r\n      setTimeout(onChange.bind(this, value), 1);\r\n    }\r\n  }, [value, onChange]);\r\n\r\n  const updateValue = async () => {\r\n    try {\r\n      let newValue;\r\n      if (DEBUG) console.log('CALLING ', contractName, functionName, 'with args', args);\r\n      if (args && args.length > 0) {\r\n        newValue = await contracts[contractName][functionName](...args);\r\n        if (DEBUG)\r\n          console.log('contractName', contractName, 'functionName', functionName, 'args', args, 'RESULT:', newValue);\r\n      } else {\r\n        newValue = await contracts[contractName][functionName]();\r\n      }\r\n      if (formatter && typeof formatter === 'function') {\r\n        newValue = formatter(newValue);\r\n      }\r\n      // console.log(\"GOT VALUE\",newValue)\r\n      if (newValue !== value) {\r\n        setValue(newValue);\r\n      }\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  // Only pass a provider to watch on a block if we have a contract and no PollTime\r\n  useOnBlock(contracts && contracts[contractName] && adjustPollTime === 0 && contracts[contractName].provider, () => {\r\n    if (contracts && contracts[contractName] && adjustPollTime === 0) {\r\n      updateValue();\r\n    }\r\n  });\r\n\r\n  // Use a poller if a pollTime is provided\r\n  usePoller(\r\n    async () => {\r\n      if (contracts && contracts[contractName] && adjustPollTime > 0) {\r\n        if (DEBUG) console.log('polling!', contractName, functionName);\r\n        updateValue();\r\n      }\r\n    },\r\n    adjustPollTime,\r\n    contracts && contracts[contractName],\r\n  );\r\n\r\n  return value;\r\n}\r\n","// MY INFURA_ID, SWAP IN YOURS FROM https://infura.io/dashboard/ethereum\r\nexport const INFURA_ID = '460f40a260564ac4a4f4b3fffb032dad';\r\n\r\n// MY ETHERSCAN_ID, SWAP IN YOURS FROM https://etherscan.io/myapikey\r\nexport const ETHERSCAN_KEY = 'PSW8C433Q667DVEX5BCRMGNAH9FSGFZ7Q8';\r\n\r\n// BLOCKNATIVE ID FOR Notify.js:\r\nexport const BLOCKNATIVE_DAPPID = '0b58206a-f3c0-4701-a62f-73c7243e8c77';\r\n\r\n// EXTERNAL CONTRACTS\r\n\r\nexport const DAI_ADDRESS = '0x6B175474E89094C44Da98b954EedeAC495271d0F';\r\n\r\nexport const DAI_ABI = [\r\n  {\r\n    inputs: [{ internalType: 'uint256', name: 'chainId_', type: 'uint256' }],\r\n    payable: false,\r\n    stateMutability: 'nonpayable',\r\n    type: 'constructor',\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      { indexed: true, internalType: 'address', name: 'src', type: 'address' },\r\n      { indexed: true, internalType: 'address', name: 'guy', type: 'address' },\r\n      { indexed: false, internalType: 'uint256', name: 'wad', type: 'uint256' },\r\n    ],\r\n    name: 'Approval',\r\n    type: 'event',\r\n  },\r\n  {\r\n    anonymous: true,\r\n    inputs: [\r\n      { indexed: true, internalType: 'bytes4', name: 'sig', type: 'bytes4' },\r\n      { indexed: true, internalType: 'address', name: 'usr', type: 'address' },\r\n      { indexed: true, internalType: 'bytes32', name: 'arg1', type: 'bytes32' },\r\n      { indexed: true, internalType: 'bytes32', name: 'arg2', type: 'bytes32' },\r\n      { indexed: false, internalType: 'bytes', name: 'data', type: 'bytes' },\r\n    ],\r\n    name: 'LogNote',\r\n    type: 'event',\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      { indexed: true, internalType: 'address', name: 'src', type: 'address' },\r\n      { indexed: true, internalType: 'address', name: 'dst', type: 'address' },\r\n      { indexed: false, internalType: 'uint256', name: 'wad', type: 'uint256' },\r\n    ],\r\n    name: 'Transfer',\r\n    type: 'event',\r\n  },\r\n  {\r\n    constant: true,\r\n    inputs: [],\r\n    name: 'DOMAIN_SEPARATOR',\r\n    outputs: [{ internalType: 'bytes32', name: '', type: 'bytes32' }],\r\n    payable: false,\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    constant: true,\r\n    inputs: [],\r\n    name: 'PERMIT_TYPEHASH',\r\n    outputs: [{ internalType: 'bytes32', name: '', type: 'bytes32' }],\r\n    payable: false,\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    constant: true,\r\n    inputs: [\r\n      { internalType: 'address', name: '', type: 'address' },\r\n      { internalType: 'address', name: '', type: 'address' },\r\n    ],\r\n    name: 'allowance',\r\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\r\n    payable: false,\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    constant: false,\r\n    inputs: [\r\n      { internalType: 'address', name: 'usr', type: 'address' },\r\n      { internalType: 'uint256', name: 'wad', type: 'uint256' },\r\n    ],\r\n    name: 'approve',\r\n    outputs: [{ internalType: 'bool', name: '', type: 'bool' }],\r\n    payable: false,\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    constant: true,\r\n    inputs: [{ internalType: 'address', name: '', type: 'address' }],\r\n    name: 'balanceOf',\r\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\r\n    payable: false,\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    constant: false,\r\n    inputs: [\r\n      { internalType: 'address', name: 'usr', type: 'address' },\r\n      { internalType: 'uint256', name: 'wad', type: 'uint256' },\r\n    ],\r\n    name: 'burn',\r\n    outputs: [],\r\n    payable: false,\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    constant: true,\r\n    inputs: [],\r\n    name: 'decimals',\r\n    outputs: [{ internalType: 'uint8', name: '', type: 'uint8' }],\r\n    payable: false,\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    constant: false,\r\n    inputs: [{ internalType: 'address', name: 'guy', type: 'address' }],\r\n    name: 'deny',\r\n    outputs: [],\r\n    payable: false,\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    constant: false,\r\n    inputs: [\r\n      { internalType: 'address', name: 'usr', type: 'address' },\r\n      { internalType: 'uint256', name: 'wad', type: 'uint256' },\r\n    ],\r\n    name: 'mint',\r\n    outputs: [],\r\n    payable: false,\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    constant: false,\r\n    inputs: [\r\n      { internalType: 'address', name: 'src', type: 'address' },\r\n      { internalType: 'address', name: 'dst', type: 'address' },\r\n      { internalType: 'uint256', name: 'wad', type: 'uint256' },\r\n    ],\r\n    name: 'move',\r\n    outputs: [],\r\n    payable: false,\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    constant: true,\r\n    inputs: [],\r\n    name: 'name',\r\n    outputs: [{ internalType: 'string', name: '', type: 'string' }],\r\n    payable: false,\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    constant: true,\r\n    inputs: [{ internalType: 'address', name: '', type: 'address' }],\r\n    name: 'nonces',\r\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\r\n    payable: false,\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    constant: false,\r\n    inputs: [\r\n      { internalType: 'address', name: 'holder', type: 'address' },\r\n      { internalType: 'address', name: 'spender', type: 'address' },\r\n      { internalType: 'uint256', name: 'nonce', type: 'uint256' },\r\n      { internalType: 'uint256', name: 'expiry', type: 'uint256' },\r\n      { internalType: 'bool', name: 'allowed', type: 'bool' },\r\n      { internalType: 'uint8', name: 'v', type: 'uint8' },\r\n      { internalType: 'bytes32', name: 'r', type: 'bytes32' },\r\n      { internalType: 'bytes32', name: 's', type: 'bytes32' },\r\n    ],\r\n    name: 'permit',\r\n    outputs: [],\r\n    payable: false,\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    constant: false,\r\n    inputs: [\r\n      { internalType: 'address', name: 'usr', type: 'address' },\r\n      { internalType: 'uint256', name: 'wad', type: 'uint256' },\r\n    ],\r\n    name: 'pull',\r\n    outputs: [],\r\n    payable: false,\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    constant: false,\r\n    inputs: [\r\n      { internalType: 'address', name: 'usr', type: 'address' },\r\n      { internalType: 'uint256', name: 'wad', type: 'uint256' },\r\n    ],\r\n    name: 'push',\r\n    outputs: [],\r\n    payable: false,\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    constant: false,\r\n    inputs: [{ internalType: 'address', name: 'guy', type: 'address' }],\r\n    name: 'rely',\r\n    outputs: [],\r\n    payable: false,\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    constant: true,\r\n    inputs: [],\r\n    name: 'symbol',\r\n    outputs: [{ internalType: 'string', name: '', type: 'string' }],\r\n    payable: false,\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    constant: true,\r\n    inputs: [],\r\n    name: 'totalSupply',\r\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\r\n    payable: false,\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    constant: false,\r\n    inputs: [\r\n      { internalType: 'address', name: 'dst', type: 'address' },\r\n      { internalType: 'uint256', name: 'wad', type: 'uint256' },\r\n    ],\r\n    name: 'transfer',\r\n    outputs: [{ internalType: 'bool', name: '', type: 'bool' }],\r\n    payable: false,\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    constant: false,\r\n    inputs: [\r\n      { internalType: 'address', name: 'src', type: 'address' },\r\n      { internalType: 'address', name: 'dst', type: 'address' },\r\n      { internalType: 'uint256', name: 'wad', type: 'uint256' },\r\n    ],\r\n    name: 'transferFrom',\r\n    outputs: [{ internalType: 'bool', name: '', type: 'bool' }],\r\n    payable: false,\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    constant: true,\r\n    inputs: [],\r\n    name: 'version',\r\n    outputs: [{ internalType: 'string', name: '', type: 'string' }],\r\n    payable: false,\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    constant: true,\r\n    inputs: [{ internalType: 'address', name: '', type: 'address' }],\r\n    name: 'wards',\r\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\r\n    payable: false,\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n];\r\n\r\nexport const NETWORKS = {\r\n  localhost: {\r\n    name: 'localhost',\r\n    color: '#666666',\r\n    chainId: 31337,\r\n    blockExplorer: '',\r\n    rpcUrl: 'http://' + window.location.hostname + ':8545',\r\n  },\r\n  mainnet: {\r\n    name: 'mainnet',\r\n    color: '#ff8b9e',\r\n    chainId: 1,\r\n    rpcUrl: `https://mainnet.infura.io/v3/${INFURA_ID}`,\r\n    blockExplorer: 'https://etherscan.io/',\r\n  },\r\n  kovan: {\r\n    name: 'kovan',\r\n    color: '#7003DD',\r\n    chainId: 42,\r\n    rpcUrl: `https://kovan.infura.io/v3/${INFURA_ID}`,\r\n    blockExplorer: 'https://kovan.etherscan.io/',\r\n    faucet: 'https://gitter.im/kovan-testnet/faucet', // https://faucet.kovan.network/\r\n  },\r\n  rinkeby: {\r\n    name: 'rinkeby',\r\n    color: '#e0d068',\r\n    chainId: 4,\r\n    rpcUrl: `https://rinkeby.infura.io/v3/${INFURA_ID}`,\r\n    faucet: 'https://faucet.rinkeby.io/',\r\n    blockExplorer: 'https://rinkeby.etherscan.io/',\r\n  },\r\n  ropsten: {\r\n    name: 'ropsten',\r\n    color: '#F60D09',\r\n    chainId: 3,\r\n    faucet: 'https://faucet.ropsten.be/',\r\n    blockExplorer: 'https://ropsten.etherscan.io/',\r\n    rpcUrl: `https://ropsten.infura.io/v3/${INFURA_ID}`,\r\n  },\r\n  goerli: {\r\n    name: 'goerli',\r\n    color: '#0975F6',\r\n    chainId: 5,\r\n    faucet: 'https://goerli-faucet.slock.it/',\r\n    blockExplorer: 'https://goerli.etherscan.io/',\r\n    rpcUrl: `https://goerli.infura.io/v3/${INFURA_ID}`,\r\n  },\r\n  xdai: {\r\n    name: 'xdai',\r\n    color: '#48a9a6',\r\n    chainId: 100,\r\n    price: 1,\r\n    gasPrice: 1000000000,\r\n    rpcUrl: 'https://dai.poa.network',\r\n    faucet: 'https://xdai-faucet.top/',\r\n    blockExplorer: 'https://blockscout.com/poa/xdai/',\r\n  },\r\n  matic: {\r\n    name: 'matic',\r\n    color: '#2bbdf7',\r\n    chainId: 137,\r\n    price: 1,\r\n    gasPrice: 1000000000,\r\n    rpcUrl: 'https://rpc-mainnet.maticvigil.com',\r\n    faucet: 'https://faucet.matic.network/',\r\n    blockExplorer: 'https://explorer-mainnet.maticvigil.com//',\r\n  },\r\n  mumbai: {\r\n    name: 'mumbai',\r\n    color: '#92D9FA',\r\n    chainId: 80001,\r\n    price: 1,\r\n    gasPrice: 1000000000,\r\n    rpcUrl: 'https://rpc-mumbai.maticvigil.com',\r\n    faucet: 'https://faucet.matic.network/',\r\n    blockExplorer: 'https://mumbai-explorer.matic.today/',\r\n  },\r\n};\r\n\r\nexport const NETWORK = chainId => {\r\n  for (const n in NETWORKS) {\r\n    if (NETWORKS[n].chainId === chainId) {\r\n      return NETWORKS[n];\r\n    }\r\n  }\r\n};\r\n","import { Web3Provider } from '@ethersproject/providers';\r\nimport BurnerProvider from 'burner-provider';\r\nimport { useMemo } from 'react';\r\nimport { INFURA_ID } from '../constants';\r\n\r\n/*\r\n  ~ What it does? ~\r\n\r\n  Gets user provider\r\n\r\n  ~ How can I use? ~\r\n\r\n  const userProvider = useUserProvider(injectedProvider, localProvider);\r\n\r\n  ~ Features ~\r\n\r\n  - Specify the injected provider from Metamask\r\n  - Specify the local provider\r\n  - Usage examples:\r\n    const address = useUserAddress(userProvider);\r\n    const tx = Transactor(userProvider, gasPrice)\r\n*/\r\n\r\nconst useUserProvider = (injectedProvider, localProvider) =>\r\n  useMemo(() => {\r\n    if (injectedProvider) {\r\n      console.log('🦊 Using injected provider');\r\n      return injectedProvider;\r\n    }\r\n    if (!localProvider) return undefined;\r\n\r\n    const burnerConfig = {};\r\n\r\n    if (window.location.pathname) {\r\n      if (window.location.pathname.indexOf('/pk') >= 0) {\r\n        const incomingPK = window.location.hash.replace('#', '');\r\n        let rawPK;\r\n        if (incomingPK.length === 64 || incomingPK.length === 66) {\r\n          console.log('🔑 Incoming Private Key...');\r\n          rawPK = incomingPK;\r\n          burnerConfig.privateKey = rawPK;\r\n          window.history.pushState({}, '', '/');\r\n          const currentPrivateKey = window.localStorage.getItem('metaPrivateKey');\r\n          if (currentPrivateKey && currentPrivateKey !== rawPK) {\r\n            window.localStorage.setItem('metaPrivateKey_backup' + Date.now(), currentPrivateKey);\r\n          }\r\n          window.localStorage.setItem('metaPrivateKey', rawPK);\r\n        }\r\n      }\r\n    }\r\n\r\n    console.log('🔥 Using burner provider', burnerConfig);\r\n    if (localProvider.connection && localProvider.connection.url) {\r\n      burnerConfig.rpcUrl = localProvider.connection.url;\r\n      return new Web3Provider(new BurnerProvider(burnerConfig));\r\n    }\r\n    // eslint-disable-next-line no-underscore-dangle\r\n    const networkName = localProvider._network && localProvider._network.name;\r\n    burnerConfig.rpcUrl = `https://${networkName || 'mainnet'}.infura.io/v3/${INFURA_ID}`;\r\n    return new Web3Provider(new BurnerProvider(burnerConfig));\r\n  }, [injectedProvider, localProvider]);\r\n\r\nexport default useUserProvider;\r\n","import { Skeleton, Typography } from 'antd';\r\nimport React from 'react';\r\nimport Blockies from 'react-blockies';\r\nimport { useLookupAddress } from '../hooks';\r\n\r\n// changed value={address} to address={address}\r\n\r\n/*\r\n  ~ What it does? ~\r\n\r\n  Displays an address with a blockie image and option to copy address\r\n\r\n  ~ How can I use? ~\r\n\r\n  <Address\r\n    address={address}\r\n    ensProvider={mainnetProvider}\r\n    blockExplorer={blockExplorer}\r\n    fontSize={fontSize}\r\n  />\r\n\r\n  ~ Features ~\r\n\r\n  - Provide ensProvider={mainnetProvider} and your address will be replaced by ENS name\r\n              (ex. \"0xa870\" => \"user.eth\")\r\n  - Provide blockExplorer={blockExplorer}, click on address and get the link\r\n              (ex. by default \"https://etherscan.io/\" or for xdai \"https://blockscout.com/poa/xdai/\")\r\n  - Provide fontSize={fontSize} to change the size of address text\r\n*/\r\n\r\nconst { Text } = Typography;\r\n\r\nconst blockExplorerLink = (address, blockExplorer) =>\r\n  `${blockExplorer || 'https://etherscan.io/'}${'address/'}${address}`;\r\n\r\nexport default function Address(props) {\r\n  const address = props.value || props.address;\r\n\r\n  const ens = useLookupAddress(props.ensProvider, address);\r\n\r\n  if (!address) {\r\n    return (\r\n      <span>\r\n        <Skeleton avatar paragraph={{ rows: 1 }} />\r\n      </span>\r\n    );\r\n  }\r\n\r\n  let displayAddress = address.substr(0, 6);\r\n\r\n  if (ens && ens.indexOf('0x') < 0) {\r\n    displayAddress = ens;\r\n  } else if (props.size === 'short') {\r\n    displayAddress += '...' + address.substr(-4);\r\n  } else if (props.size === 'long') {\r\n    displayAddress = address;\r\n  }\r\n\r\n  const etherscanLink = blockExplorerLink(address, props.blockExplorer);\r\n  if (props.minimized) {\r\n    return (\r\n      <span style={{ verticalAlign: 'middle' }}>\r\n        <a target=\"_blank\" href={etherscanLink} rel=\"noopener noreferrer\">\r\n          <Blockies seed={address.toLowerCase()} size={8} scale={2} />\r\n        </a>\r\n      </span>\r\n    );\r\n  }\r\n\r\n  let text;\r\n  if (props.onChange) {\r\n    text = (\r\n      <Text editable={{ onChange: props.onChange }} copyable={{ text: address }}>\r\n        <a target=\"_blank\" href={etherscanLink} rel=\"noopener noreferrer\">\r\n          {displayAddress}\r\n        </a>\r\n      </Text>\r\n    );\r\n  } else {\r\n    text = (\r\n      <Text copyable={{ text: address }}>\r\n        <a target=\"_blank\" href={etherscanLink} rel=\"noopener noreferrer\">\r\n          {displayAddress}\r\n        </a>\r\n      </Text>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <span>\r\n      <span style={{ verticalAlign: 'middle' }}>\r\n        <Blockies seed={address.toLowerCase()} size={8} scale={props.fontSize ? props.fontSize / 7 : 4} />\r\n      </span>\r\n      <span style={{ verticalAlign: 'middle', paddingLeft: 5, fontSize: props.fontSize ? props.fontSize : 28 }}>\r\n        {text}\r\n      </span>\r\n    </span>\r\n  );\r\n}\r\n","/* eslint-disable no-param-reassign */\r\nimport { hexlify } from '@ethersproject/bytes';\r\nimport { parseUnits } from '@ethersproject/units';\r\nimport { notification } from 'antd';\r\nimport Notify from 'bnc-notify';\r\nimport { BLOCKNATIVE_DAPPID } from '../constants';\r\n\r\n// this should probably just be renamed to \"notifier\"\r\n// it is basically just a wrapper around BlockNative's wonderful Notify.js\r\n// https://docs.blocknative.com/notify\r\nconst callbacks = {};\r\n\r\nconst DEBUG = true;\r\n\r\nexport default function Transactor(provider, gasPrice, etherscan) {\r\n  if (typeof provider !== 'undefined') {\r\n    // eslint-disable-next-line consistent-return\r\n    return async (tx, callback) => {\r\n      const signer = provider.getSigner();\r\n      const network = await provider.getNetwork();\r\n      console.log('network', network);\r\n      const options = {\r\n        dappId: BLOCKNATIVE_DAPPID, // GET YOUR OWN KEY AT https://account.blocknative.com\r\n        system: 'ethereum',\r\n        networkId: network.chainId,\r\n        // darkMode: Boolean, // (default: false)\r\n        transactionHandler: txInformation => {\r\n          if (DEBUG) console.log('HANDLE TX', txInformation);\r\n          const possibleFunction = callbacks[txInformation.transaction.hash];\r\n          if (typeof possibleFunction === 'function') {\r\n            possibleFunction(txInformation.transaction);\r\n          }\r\n        },\r\n      };\r\n      const notify = Notify(options);\r\n\r\n      let etherscanNetwork = '';\r\n      if (network.name && network.chainId > 1) {\r\n        etherscanNetwork = network.name + '.';\r\n      }\r\n\r\n      let etherscanTxUrl = 'https://' + etherscanNetwork + 'etherscan.io/tx/';\r\n      if (network.chainId === 100) {\r\n        etherscanTxUrl = 'https://blockscout.com/poa/xdai/tx/';\r\n      }\r\n\r\n      try {\r\n        let result;\r\n        if (tx instanceof Promise) {\r\n          if (DEBUG) console.log('AWAITING TX', tx);\r\n          result = await tx;\r\n        } else {\r\n          if (!tx.gasPrice) {\r\n            tx.gasPrice = gasPrice || parseUnits('4.1', 'gwei');\r\n          }\r\n          if (!tx.gasLimit) {\r\n            tx.gasLimit = hexlify(120000);\r\n          }\r\n          if (DEBUG) console.log('RUNNING TX', tx);\r\n          result = await signer.sendTransaction(tx);\r\n        }\r\n        if (DEBUG) console.log('RESULT:', result);\r\n        // console.log(\"Notify\", notify);\r\n\r\n        if (callback) {\r\n          callbacks[result.hash] = callback;\r\n        }\r\n\r\n        // if it is a valid Notify.js network, use that, if not, just send a default notification\r\n        if ([1, 3, 4, 5, 42, 100].indexOf(network.chainId) >= 0) {\r\n          const { emitter } = notify.hash(result.hash);\r\n          emitter.on('all', transaction => {\r\n            return {\r\n              onclick: () => window.open((etherscan || etherscanTxUrl) + transaction.hash),\r\n            };\r\n          });\r\n        } else {\r\n          notification.info({\r\n            message: 'Local Transaction Sent',\r\n            description: result.hash,\r\n            placement: 'bottomRight',\r\n          });\r\n          // on most networks BlockNative will update a transaction handler,\r\n          // but locally we will set an interval to listen...\r\n          if (callback) {\r\n            const txResult = await tx;\r\n            const listeningInterval = setInterval(async () => {\r\n              console.log('CHECK IN ON THE TX', txResult, provider);\r\n              const currentTransactionReceipt = await provider.getTransactionReceipt(txResult.hash);\r\n              if (currentTransactionReceipt && currentTransactionReceipt.confirmations) {\r\n                callback({ ...txResult, ...currentTransactionReceipt });\r\n                clearInterval(listeningInterval);\r\n              }\r\n            }, 500);\r\n          }\r\n        }\r\n\r\n        return result;\r\n      } catch (e) {\r\n        console.log(e);\r\n        console.log('Transaction Error:', e.message);\r\n        notification.error({\r\n          message: 'Transaction Error',\r\n          description: e.message,\r\n        });\r\n        if (callback && typeof callback === 'function') {\r\n          callback(e);\r\n        }\r\n      }\r\n    };\r\n  }\r\n}\r\n","import { KeyOutlined, QrcodeOutlined, SendOutlined, WalletOutlined } from '@ant-design/icons';\r\nimport { parseEther } from '@ethersproject/units';\r\nimport { Button, Modal, Spin, Tooltip, Typography } from 'antd';\r\nimport { useUserAddress } from 'eth-hooks';\r\nimport { ethers } from 'ethers';\r\nimport QR from 'qrcode.react';\r\nimport React, { useState } from 'react';\r\nimport { Transactor } from '../helpers';\r\nimport Address from './Address';\r\nimport AddressInput from './AddressInput';\r\nimport Balance from './Balance';\r\nimport EtherInput from './EtherInput';\r\n\r\nconst { Text, Paragraph } = Typography;\r\n\r\n/*\r\n  ~ What it does? ~\r\n\r\n  Displays a wallet where you can specify address and send USD/ETH, with options to\r\n  scan address, to convert between USD and ETH, to see and generate private keys,\r\n  to send, receive and extract the burner wallet\r\n\r\n  ~ How can I use? ~\r\n\r\n  <Wallet\r\n    provider={userProvider}\r\n    address={address}\r\n    ensProvider={mainnetProvider}\r\n    price={price}\r\n    color='red'\r\n  />\r\n\r\n  ~ Features ~\r\n\r\n  - Provide provider={userProvider} to display a wallet\r\n  - Provide address={address} if you want to specify address, otherwise\r\n                                                    your default address will be used\r\n  - Provide ensProvider={mainnetProvider} and your address will be replaced by ENS name\r\n              (ex. \"0xa870\" => \"user.eth\") or you can enter directly ENS name instead of address\r\n  - Provide price={price} of ether and easily convert between USD and ETH\r\n  - Provide color to specify the color of wallet icon\r\n*/\r\n\r\nexport default function Wallet(props) {\r\n  const signerAddress = useUserAddress(props.provider);\r\n  const selectedAddress = props.address || signerAddress;\r\n\r\n  const [open, setOpen] = useState();\r\n  const [qr, setQr] = useState();\r\n  const [amount, setAmount] = useState();\r\n  const [toAddress, setToAddress] = useState();\r\n  const [pk, setPK] = useState();\r\n\r\n  const providerSend = props.provider ? (\r\n    <Tooltip title=\"Wallet\">\r\n      <WalletOutlined\r\n        onClick={() => {\r\n          setOpen(!open);\r\n        }}\r\n        rotate={-90}\r\n        style={{\r\n          padding: 7,\r\n          color: props.color ? props.color : '',\r\n          cursor: 'pointer',\r\n          fontSize: 28,\r\n          verticalAlign: 'middle',\r\n        }}\r\n      />\r\n    </Tooltip>\r\n  ) : (\r\n    ''\r\n  );\r\n\r\n  let display;\r\n  let receiveButton;\r\n  let privateKeyButton;\r\n  if (qr) {\r\n    display = (\r\n      <div>\r\n        <div>\r\n          <Text copyable>{selectedAddress}</Text>\r\n        </div>\r\n        <QR\r\n          value={selectedAddress}\r\n          size=\"450\"\r\n          level=\"H\"\r\n          includeMargin\r\n          renderAs=\"svg\"\r\n          imageSettings={{ excavate: false }}\r\n        />\r\n      </div>\r\n    );\r\n    receiveButton = (\r\n      <Button\r\n        key=\"hide\"\r\n        onClick={() => {\r\n          setQr('');\r\n        }}\r\n      >\r\n        <QrcodeOutlined /> Hide\r\n      </Button>\r\n    );\r\n    privateKeyButton = (\r\n      <Button\r\n        key=\"hide\"\r\n        onClick={() => {\r\n          setPK(selectedAddress);\r\n          setQr('');\r\n        }}\r\n      >\r\n        <KeyOutlined /> Private Key\r\n      </Button>\r\n    );\r\n  } else if (pk) {\r\n    const privateKey = localStorage.getItem('metaPrivateKey');\r\n    const wallet = new ethers.Wallet(privateKey);\r\n\r\n    if (wallet.address !== selectedAddress) {\r\n      display = (\r\n        <div>\r\n          <b>*injected account*, private key unknown</b>\r\n        </div>\r\n      );\r\n    } else {\r\n      const extraPkDisplayAdded = {};\r\n      const extraPkDisplay = [];\r\n      extraPkDisplayAdded[wallet.address] = true;\r\n      extraPkDisplay.push(\r\n        <div style={{ fontSize: 16, padding: 2, backgroundStyle: '#89e789' }}>\r\n          <a href={'/pk#' + privateKey}>\r\n            <Address minimized address={wallet.address} ensProvider={props.ensProvider} /> {wallet.address.substr(0, 6)}\r\n          </a>\r\n        </div>,\r\n      );\r\n      for (const key in localStorage) {\r\n        if (key.indexOf('metaPrivateKey_backup') >= 0) {\r\n          console.log(key);\r\n          const pastpk = localStorage.getItem(key);\r\n          const pastwallet = new ethers.Wallet(pastpk);\r\n          if (!extraPkDisplayAdded[pastwallet.address] /* && selectedAddress!=pastwallet.address */) {\r\n            extraPkDisplayAdded[pastwallet.address] = true;\r\n            extraPkDisplay.push(\r\n              <div style={{ fontSize: 16 }}>\r\n                <a href={'/pk#' + pastpk}>\r\n                  <Address minimized address={pastwallet.address} ensProvider={props.ensProvider} />{' '}\r\n                  {pastwallet.address.substr(0, 6)}\r\n                </a>\r\n              </div>,\r\n            );\r\n          }\r\n        }\r\n      }\r\n\r\n      display = (\r\n        <div>\r\n          <b>Private Key:</b>\r\n\r\n          <div>\r\n            <Text copyable>{privateKey}</Text>\r\n          </div>\r\n\r\n          <hr />\r\n\r\n          <i>\r\n            Point your camera phone at qr code to open in\r\n            <a target=\"_blank\" href={'https://xdai.io/' + privateKey} rel=\"noopener noreferrer\">\r\n              burner wallet\r\n            </a>\r\n            :\r\n          </i>\r\n          <QR\r\n            value={'https://xdai.io/' + privateKey}\r\n            size=\"450\"\r\n            level=\"H\"\r\n            includeMargin\r\n            renderAs=\"svg\"\r\n            imageSettings={{ excavate: false }}\r\n          />\r\n\r\n          <Paragraph style={{ fontSize: '16' }} copyable>\r\n            {'https://xdai.io/' + privateKey}\r\n          </Paragraph>\r\n\r\n          {extraPkDisplay ? (\r\n            <div>\r\n              <h3>Known Private Keys:</h3>\r\n              {extraPkDisplay}\r\n              <Button\r\n                onClick={() => {\r\n                  const currentPrivateKey = window.localStorage.getItem('metaPrivateKey');\r\n                  if (currentPrivateKey) {\r\n                    window.localStorage.setItem('metaPrivateKey_backup' + Date.now(), currentPrivateKey);\r\n                  }\r\n                  const randomWallet = ethers.Wallet.createRandom();\r\n                  const randomPrivateKey = randomWallet._signingKey().privateKey;\r\n                  window.localStorage.setItem('metaPrivateKey', randomPrivateKey);\r\n                  window.location.reload();\r\n                }}\r\n              >\r\n                Generate\r\n              </Button>\r\n            </div>\r\n          ) : (\r\n            ''\r\n          )}\r\n        </div>\r\n      );\r\n    }\r\n\r\n    receiveButton = (\r\n      <Button\r\n        key=\"receive\"\r\n        onClick={() => {\r\n          setQr(selectedAddress);\r\n          setPK('');\r\n        }}\r\n      >\r\n        <QrcodeOutlined /> Receive\r\n      </Button>\r\n    );\r\n    privateKeyButton = (\r\n      <Button\r\n        key=\"hide\"\r\n        onClick={() => {\r\n          setPK('');\r\n          setQr('');\r\n        }}\r\n      >\r\n        <KeyOutlined /> Hide\r\n      </Button>\r\n    );\r\n  } else {\r\n    const inputStyle = {\r\n      padding: 10,\r\n    };\r\n\r\n    display = (\r\n      <div>\r\n        <div style={inputStyle}>\r\n          <AddressInput\r\n            autoFocus\r\n            ensProvider={props.ensProvider}\r\n            placeholder=\"to address\"\r\n            address={toAddress}\r\n            onChange={setToAddress}\r\n          />\r\n        </div>\r\n        <div style={inputStyle}>\r\n          <EtherInput\r\n            price={props.price}\r\n            value={amount}\r\n            onChange={value => {\r\n              setAmount(value);\r\n            }}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n    receiveButton = (\r\n      <Button\r\n        key=\"receive\"\r\n        onClick={() => {\r\n          setQr(selectedAddress);\r\n          setPK('');\r\n        }}\r\n      >\r\n        <QrcodeOutlined /> Receive\r\n      </Button>\r\n    );\r\n    privateKeyButton = (\r\n      <Button\r\n        key=\"hide\"\r\n        onClick={() => {\r\n          setPK(selectedAddress);\r\n          setQr('');\r\n        }}\r\n      >\r\n        <KeyOutlined /> Private Key\r\n      </Button>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <span>\r\n      {providerSend}\r\n      <Modal\r\n        visible={open}\r\n        title={\r\n          <div>\r\n            {selectedAddress ? <Address address={selectedAddress} ensProvider={props.ensProvider} /> : <Spin />}\r\n            <div style={{ float: 'right', paddingRight: 25 }}>\r\n              <Balance address={selectedAddress} provider={props.provider} dollarMultiplier={props.price} />\r\n            </div>\r\n          </div>\r\n        }\r\n        onOk={() => {\r\n          setQr();\r\n          setPK();\r\n          setOpen(!open);\r\n        }}\r\n        onCancel={() => {\r\n          setQr();\r\n          setPK();\r\n          setOpen(!open);\r\n        }}\r\n        footer={[\r\n          privateKeyButton,\r\n          receiveButton,\r\n          <Button\r\n            key=\"submit\"\r\n            type=\"primary\"\r\n            disabled={!amount || !toAddress || qr}\r\n            loading={false}\r\n            onClick={() => {\r\n              const tx = Transactor(props.provider);\r\n\r\n              let value;\r\n              try {\r\n                value = parseEther('' + amount);\r\n              } catch (e) {\r\n                // failed to parseEther, try something else\r\n                value = parseEther('' + parseFloat(amount).toFixed(8));\r\n              }\r\n\r\n              tx({\r\n                to: toAddress,\r\n                value,\r\n              });\r\n              setOpen(!open);\r\n              setQr();\r\n            }}\r\n          >\r\n            <SendOutlined /> Send\r\n          </Button>,\r\n        ]}\r\n      >\r\n        {display}\r\n      </Modal>\r\n    </span>\r\n  );\r\n}\r\n","import { Input } from 'antd';\r\nimport React, { useEffect, useState } from 'react';\r\n\r\nconst { utils, constants } = require('ethers');\r\n\r\n/*\r\n  ~ What it does? ~\r\n\r\n  Displays input field with options to convert between STRING and BYTES32\r\n\r\n  ~ How can I use? ~\r\n\r\n  <BytesStringInput\r\n    autofocus\r\n    value={\"scaffold-eth\"}\r\n    placeholder=\"Enter value...\"\r\n    onChange={value => {\r\n      setValue(value);\r\n    }}\r\n  />\r\n\r\n  ~ Features ~\r\n\r\n  - Provide value={value} to specify initial string\r\n  - Provide placeholder=\"Enter value...\" value for the input\r\n  - Control input change by onChange={value => { setValue(value);}}\r\n\r\n*/\r\n\r\nexport default function BytesStringInput(props) {\r\n  const [mode, setMode] = useState('STRING');\r\n  const [display, setDisplay] = useState();\r\n  const [value, setValue] = useState(constants.HashZero);\r\n\r\n  // current value is the value in bytes32\r\n  const currentValue = typeof props.value !== 'undefined' ? props.value : value;\r\n\r\n  const option = title => {\r\n    return (\r\n      <div\r\n        style={{ cursor: 'pointer' }}\r\n        onClick={() => {\r\n          if (mode === 'STRING') {\r\n            setMode('BYTES32');\r\n            if (!utils.isHexString(currentValue)) {\r\n              /* in case user enters invalid bytes32 number,\r\n                   it considers it as string and converts to bytes32 */\r\n              const changedValue = utils.formatBytes32String(currentValue);\r\n              setDisplay(changedValue);\r\n            } else {\r\n              setDisplay(currentValue);\r\n            }\r\n          } else {\r\n            setMode('STRING');\r\n            if (currentValue && utils.isHexString(currentValue)) {\r\n              setDisplay(utils.parseBytes32String(currentValue));\r\n            } else {\r\n              setDisplay(currentValue);\r\n            }\r\n          }\r\n        }}\r\n      >\r\n        {title}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  let addonAfter;\r\n  if (mode === 'STRING') {\r\n    addonAfter = option('STRING 🔀');\r\n  } else {\r\n    addonAfter = option('BYTES32 🔀');\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!currentValue) {\r\n      setDisplay('');\r\n    }\r\n  }, [currentValue]);\r\n\r\n  return (\r\n    <Input\r\n      placeholder={props.placeholder ? props.placeholder : 'Enter value in ' + mode}\r\n      autoFocus={props.autoFocus}\r\n      value={display}\r\n      addonAfter={addonAfter}\r\n      onChange={async e => {\r\n        const newValue = e.target.value;\r\n        if (mode === 'STRING') {\r\n          // const ethValue = parseFloat(newValue) / props.price;\r\n          // setValue(ethValue);\r\n          if (typeof props.onChange === 'function') {\r\n            props.onChange(utils.formatBytes32String(newValue));\r\n          }\r\n          setValue(utils.formatBytes32String(newValue));\r\n          setDisplay(newValue);\r\n        } else {\r\n          if (typeof props.onChange === 'function') {\r\n            props.onChange(newValue);\r\n          }\r\n          setValue(newValue);\r\n          setDisplay(newValue);\r\n        }\r\n      }}\r\n    />\r\n  );\r\n}\r\n","/* eslint-disable jsx-a11y/click-events-have-key-events */\r\n/* eslint-disable jsx-a11y/no-static-element-interactions */\r\n/* eslint-disable jsx-a11y/accessible-emoji */\r\nimport { BigNumber } from '@ethersproject/bignumber';\r\nimport { Button, Col, Divider, Input, Row, Tooltip } from 'antd';\r\nimport React, { useState } from 'react';\r\nimport Blockies from 'react-blockies';\r\nimport { Transactor } from '../../helpers';\r\nimport tryToDisplay from './utils';\r\n\r\nconst { utils } = require('ethers');\r\n\r\nexport default function FunctionForm({ contractFunction, functionInfo, provider, gasPrice, triggerRefresh }) {\r\n  const [form, setForm] = useState({});\r\n  const [txValue, setTxValue] = useState();\r\n  const [returnValue, setReturnValue] = useState();\r\n\r\n  const tx = Transactor(provider, gasPrice);\r\n\r\n  let inputIndex = 0;\r\n  const inputs = functionInfo.inputs.map(input => {\r\n    const key = functionInfo.name + '_' + input.name + '_' + input.type + '_' + inputIndex++;\r\n\r\n    let buttons = '';\r\n    if (input.type === 'bytes32') {\r\n      buttons = (\r\n        <Tooltip placement=\"right\" title=\"to bytes32\">\r\n          <div\r\n            type=\"dashed\"\r\n            style={{ cursor: 'pointer' }}\r\n            onClick={async () => {\r\n              if (utils.isHexString(form[key])) {\r\n                const formUpdate = { ...form };\r\n                formUpdate[key] = utils.parseBytes32String(form[key]);\r\n                setForm(formUpdate);\r\n              } else {\r\n                const formUpdate = { ...form };\r\n                formUpdate[key] = utils.formatBytes32String(form[key]);\r\n                setForm(formUpdate);\r\n              }\r\n            }}\r\n          >\r\n            #️⃣\r\n          </div>\r\n        </Tooltip>\r\n      );\r\n    } else if (input.type === 'bytes') {\r\n      buttons = (\r\n        <Tooltip placement=\"right\" title=\"to hex\">\r\n          <div\r\n            type=\"dashed\"\r\n            style={{ cursor: 'pointer' }}\r\n            onClick={async () => {\r\n              if (utils.isHexString(form[key])) {\r\n                const formUpdate = { ...form };\r\n                formUpdate[key] = utils.toUtf8String(form[key]);\r\n                setForm(formUpdate);\r\n              } else {\r\n                const formUpdate = { ...form };\r\n                formUpdate[key] = utils.hexlify(utils.toUtf8Bytes(form[key]));\r\n                setForm(formUpdate);\r\n              }\r\n            }}\r\n          >\r\n            #️⃣\r\n          </div>\r\n        </Tooltip>\r\n      );\r\n    } else if (input.type === 'uint256') {\r\n      buttons = (\r\n        <Tooltip placement=\"right\" title=\"* 10 ** 18\">\r\n          <div\r\n            type=\"dashed\"\r\n            style={{ cursor: 'pointer' }}\r\n            onClick={async () => {\r\n              const formUpdate = { ...form };\r\n              formUpdate[key] = utils.parseEther(form[key]);\r\n              setForm(formUpdate);\r\n            }}\r\n          >\r\n            ✴️\r\n          </div>\r\n        </Tooltip>\r\n      );\r\n    } else if (input.type === 'address') {\r\n      const possibleAddress = form[key] && form[key].toLowerCase && form[key].toLowerCase().trim();\r\n      if (possibleAddress && possibleAddress.length === 42) {\r\n        buttons = (\r\n          <Tooltip placement=\"right\" title=\"blockie\">\r\n            <Blockies seed={possibleAddress} scale={3} />\r\n          </Tooltip>\r\n        );\r\n      }\r\n    }\r\n\r\n    return (\r\n      <div style={{ margin: 2 }} key={key}>\r\n        <Input\r\n          size=\"large\"\r\n          placeholder={input.name ? input.type + ' ' + input.name : input.type}\r\n          autoComplete=\"off\"\r\n          value={form[key]}\r\n          name={key}\r\n          onChange={event => {\r\n            const formUpdate = { ...form };\r\n            formUpdate[event.target.name] = event.target.value;\r\n            setForm(formUpdate);\r\n          }}\r\n          suffix={buttons}\r\n        />\r\n      </div>\r\n    );\r\n  });\r\n\r\n  const txValueInput = (\r\n    <div style={{ margin: 2 }} key=\"txValueInput\">\r\n      <Input\r\n        placeholder=\"transaction value\"\r\n        onChange={e => setTxValue(e.target.value)}\r\n        value={txValue}\r\n        addonAfter={\r\n          <div>\r\n            <Row>\r\n              <Col span={16}>\r\n                <Tooltip placement=\"right\" title=\" * 10^18 \">\r\n                  <div\r\n                    type=\"dashed\"\r\n                    style={{ cursor: 'pointer' }}\r\n                    onClick={async () => {\r\n                      const floatValue = parseFloat(txValue);\r\n                      if (floatValue) setTxValue('' + floatValue * 10 ** 18);\r\n                    }}\r\n                  >\r\n                    ✳️\r\n                  </div>\r\n                </Tooltip>\r\n              </Col>\r\n              <Col span={16}>\r\n                <Tooltip placement=\"right\" title=\"number to hex\">\r\n                  <div\r\n                    type=\"dashed\"\r\n                    style={{ cursor: 'pointer' }}\r\n                    onClick={async () => {\r\n                      setTxValue(BigNumber.from(txValue).toHexString());\r\n                    }}\r\n                  >\r\n                    #️⃣\r\n                  </div>\r\n                </Tooltip>\r\n              </Col>\r\n            </Row>\r\n          </div>\r\n        }\r\n      />\r\n    </div>\r\n  );\r\n\r\n  if (functionInfo.payable) {\r\n    inputs.push(txValueInput);\r\n  }\r\n\r\n  const buttonIcon =\r\n    functionInfo.type === 'call' ? (\r\n      <Button style={{ marginLeft: -32 }}>Read📡</Button>\r\n    ) : (\r\n      <Button style={{ marginLeft: -32 }}>Send💸</Button>\r\n    );\r\n  inputs.push(\r\n    <div style={{ cursor: 'pointer', margin: 2 }} key=\"goButton\">\r\n      <Input\r\n        onChange={e => setReturnValue(e.target.value)}\r\n        defaultValue=\"\"\r\n        bordered={false}\r\n        disabled\r\n        value={returnValue}\r\n        suffix={\r\n          <div\r\n            style={{ width: 50, height: 30, margin: 0 }}\r\n            type=\"default\"\r\n            onClick={async () => {\r\n              let innerIndex = 0;\r\n              const args = functionInfo.inputs.map(input => {\r\n                const key = functionInfo.name + '_' + input.name + '_' + input.type + '_' + innerIndex++;\r\n                let value = form[key];\r\n                if (input.baseType === 'array') {\r\n                  value = JSON.parse(value);\r\n                } else if (input.type === 'bool') {\r\n                  if (value === 'true' || value === '1' || value === '0x1' || value === '0x01' || value === '0x0001') {\r\n                    value = 1;\r\n                  } else {\r\n                    value = 0;\r\n                  }\r\n                }\r\n                return value;\r\n              });\r\n\r\n              let result;\r\n              if (functionInfo.stateMutability === 'view' || functionInfo.stateMutability === 'pure') {\r\n                const returned = await contractFunction(...args);\r\n                result = tryToDisplay(returned);\r\n              } else {\r\n                const overrides = {};\r\n                if (txValue) {\r\n                  overrides.value = txValue; // ethers.utils.parseEther()\r\n                }\r\n                // Uncomment this if you want to skip the gas estimation for each transaction\r\n                // overrides.gasLimit = hexlify(1200000);\r\n\r\n                // console.log(\"Running with extras\",extras)\r\n                const returned = await tx(contractFunction(...args, overrides));\r\n                result = tryToDisplay(returned);\r\n              }\r\n\r\n              console.log('SETTING RESULT:', result);\r\n              setReturnValue(result);\r\n              triggerRefresh(true);\r\n            }}\r\n          >\r\n            {buttonIcon}\r\n          </div>\r\n        }\r\n      />\r\n    </div>,\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <Row>\r\n        <Col\r\n          span={8}\r\n          style={{\r\n            textAlign: 'right',\r\n            opacity: 0.333,\r\n            paddingRight: 6,\r\n            fontSize: 24,\r\n          }}\r\n        >\r\n          {functionInfo.name}\r\n        </Col>\r\n        <Col span={16}>{inputs}</Col>\r\n      </Row>\r\n      <Divider />\r\n    </div>\r\n  );\r\n}\r\n","import { RetweetOutlined, SettingOutlined } from '@ant-design/icons';\r\nimport { formatUnits, parseUnits } from '@ethersproject/units';\r\nimport { ChainId, Fetcher, Percent, Token, TokenAmount, Trade, WETH } from '@uniswap/sdk';\r\nimport { abi as IUniswapV2Router02ABI } from '@uniswap/v2-periphery/build/IUniswapV2Router02.json';\r\nimport {\r\n  Button,\r\n  Card,\r\n  Descriptions,\r\n  Divider,\r\n  Drawer,\r\n  InputNumber,\r\n  Modal,\r\n  notification,\r\n  Row,\r\n  Select,\r\n  Space,\r\n  Tooltip,\r\n  Typography,\r\n} from 'antd';\r\nimport { useBlockNumber, usePoller } from 'eth-hooks';\r\nimport { ethers } from 'ethers';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useDebounce } from '../hooks';\r\n\r\nconst { Option } = Select;\r\nconst { Text } = Typography;\r\n\r\nexport const ROUTER_ADDRESS = '0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D';\r\n\r\nexport const ZERO_ADDRESS = '0x0000000000000000000000000000000000000000';\r\n\r\nconst erc20Abi = [\r\n  'function balanceOf(address owner) view returns (uint256)',\r\n  'function approve(address _spender, uint256 _value) public returns (bool success)',\r\n  'function allowance(address _owner, address _spender) public view returns (uint256 remaining)',\r\n];\r\n\r\nconst makeCall = async (callName, contract, args, metadata = {}) => {\r\n  if (contract[callName]) {\r\n    let result;\r\n    if (args) {\r\n      result = await contract[callName](...args, metadata);\r\n    } else {\r\n      result = await contract[callName]();\r\n    }\r\n    return result;\r\n  }\r\n  console.log('no call of that name!');\r\n};\r\n\r\nconst defaultToken = 'ETH';\r\nconst defaultTokenOut = 'DAI';\r\nconst defaultSlippage = '0.5';\r\nconst defaultTimeLimit = 60 * 10;\r\n\r\nconst tokenListToObject = array =>\r\n  array.reduce((obj, item) => {\r\n    // eslint-disable-next-line no-param-reassign\r\n    obj[item.symbol] = new Token(item.chainId, item.address, item.decimals, item.symbol, item.name);\r\n    return obj;\r\n  }, {});\r\n\r\nfunction Swap({ selectedProvider, tokenListURI }) {\r\n  const [tokenIn, setTokenIn] = useState(defaultToken);\r\n  const [tokenOut, setTokenOut] = useState(defaultTokenOut);\r\n  const [exact, setExact] = useState();\r\n  const [amountIn, setAmountIn] = useState();\r\n  const [amountInMax, setAmountInMax] = useState();\r\n  const [amountOut, setAmountOut] = useState();\r\n  const [amountOutMin, setAmountOutMin] = useState();\r\n  const [trades, setTrades] = useState();\r\n  const [routerAllowance, setRouterAllowance] = useState();\r\n  const [balanceIn, setBalanceIn] = useState();\r\n  const [balanceOut, setBalanceOut] = useState();\r\n  const [slippageTolerance, setSlippageTolerance] = useState(\r\n    new Percent(Math.round(defaultSlippage * 100).toString(), '10000'),\r\n  );\r\n  const [timeLimit, setTimeLimit] = useState(defaultTimeLimit);\r\n  const [swapping, setSwapping] = useState(false);\r\n  const [approving, setApproving] = useState(false);\r\n  const [settingsVisible, setSettingsVisible] = useState(false);\r\n  const [swapModalVisible, setSwapModalVisible] = useState(false);\r\n\r\n  const [tokenList, setTokenList] = useState([]);\r\n\r\n  const [tokens, setTokens] = useState();\r\n\r\n  const [invertPrice, setInvertPrice] = useState(false);\r\n\r\n  const blockNumber = useBlockNumber(selectedProvider, 3000);\r\n\r\n  const signer = selectedProvider.getSigner();\r\n  const routerContract = new ethers.Contract(ROUTER_ADDRESS, IUniswapV2Router02ABI, signer);\r\n\r\n  const _tokenListUri = tokenListURI || 'https://gateway.ipfs.io/ipns/tokens.uniswap.org';\r\n\r\n  const debouncedAmountIn = useDebounce(amountIn, 500);\r\n  const debouncedAmountOut = useDebounce(amountOut, 500);\r\n\r\n  const activeChainId = process.env.REACT_APP_NETWORK === 'kovan' ? ChainId.KOVAN : ChainId.MAINNET;\r\n\r\n  useEffect(() => {\r\n    const getTokenList = async () => {\r\n      console.log(_tokenListUri);\r\n      try {\r\n        const newTokenList = await fetch(_tokenListUri);\r\n        const tokenListJson = await newTokenList.json();\r\n        const filteredTokens = tokenListJson.tokens.filter(t => {\r\n          return t.chainId === activeChainId;\r\n        });\r\n        const ethToken = WETH[activeChainId];\r\n        ethToken.name = 'Ethereum';\r\n        ethToken.symbol = 'ETH';\r\n        ethToken.logoURI =\r\n          'https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2/logo.png';\r\n        const _tokenList = [ethToken, ...filteredTokens];\r\n        setTokenList(_tokenList);\r\n        const _tokens = tokenListToObject(_tokenList);\r\n        setTokens(_tokens);\r\n      } catch (e) {\r\n        console.log(e);\r\n      }\r\n    };\r\n    getTokenList();\r\n  }, [tokenListURI]);\r\n\r\n  const getTrades = async () => {\r\n    if (tokenIn && tokenOut && (amountIn || amountOut)) {\r\n      const pairs = arr => arr.map((v, i) => arr.slice(i + 1).map(w => [v, w])).flat();\r\n\r\n      const baseTokens = tokenList\r\n        .filter(t => {\r\n          return ['DAI', 'USDC', 'USDT', 'COMP', 'ETH', 'MKR', 'LINK', tokenIn, tokenOut].includes(t.symbol);\r\n        })\r\n        .map(el => {\r\n          return new Token(el.chainId, el.address, el.decimals, el.symbol, el.name);\r\n        });\r\n\r\n      const listOfPairwiseTokens = pairs(baseTokens);\r\n\r\n      const getPairs = async list => {\r\n        const listOfPromises = list.map(item => Fetcher.fetchPairData(item[0], item[1], selectedProvider));\r\n        return Promise.all(listOfPromises.map(p => p.catch(() => undefined)));\r\n      };\r\n\r\n      const listOfPairs = await getPairs(listOfPairwiseTokens);\r\n\r\n      let bestTrade;\r\n\r\n      if (exact === 'in') {\r\n        setAmountInMax();\r\n        bestTrade = Trade.bestTradeExactIn(\r\n          listOfPairs.filter(item => item),\r\n          new TokenAmount(tokens[tokenIn], parseUnits(amountIn.toString(), tokens[tokenIn].decimals)),\r\n          tokens[tokenOut],\r\n          { maxNumResults: 3, maxHops: 1 },\r\n        );\r\n        if (bestTrade[0]) {\r\n          setAmountOut(bestTrade[0].outputAmount.toSignificant(6));\r\n        } else {\r\n          setAmountOut();\r\n        }\r\n      } else if (exact === 'out') {\r\n        setAmountOutMin();\r\n        bestTrade = Trade.bestTradeExactOut(\r\n          listOfPairs.filter(item => item),\r\n          tokens[tokenIn],\r\n          new TokenAmount(tokens[tokenOut], parseUnits(amountOut.toString(), tokens[tokenOut].decimals)),\r\n          { maxNumResults: 3, maxHops: 1 },\r\n        );\r\n        if (bestTrade[0]) {\r\n          setAmountIn(bestTrade[0].inputAmount.toSignificant(6));\r\n        } else {\r\n          setAmountIn();\r\n        }\r\n      }\r\n\r\n      setTrades(bestTrade);\r\n\r\n      console.log(bestTrade);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getTrades();\r\n  }, [tokenIn, tokenOut, debouncedAmountIn, debouncedAmountOut, slippageTolerance, selectedProvider]);\r\n\r\n  useEffect(() => {\r\n    if (trades && trades[0]) {\r\n      if (exact === 'in') {\r\n        setAmountOutMin(trades[0].minimumAmountOut(slippageTolerance));\r\n      } else if (exact === 'out') {\r\n        setAmountInMax(trades[0].maximumAmountIn(slippageTolerance));\r\n      }\r\n    }\r\n  }, [slippageTolerance, amountIn, amountOut, trades]);\r\n\r\n  const getBalance = async (_token, _account, _contract) => {\r\n    let newBalance;\r\n    if (_token === 'ETH') {\r\n      newBalance = await selectedProvider.getBalance(_account);\r\n    } else {\r\n      newBalance = await makeCall('balanceOf', _contract, [_account]);\r\n    }\r\n    return newBalance;\r\n  };\r\n\r\n  const getAccountInfo = async () => {\r\n    if (tokens) {\r\n      const accountList = await selectedProvider.listAccounts();\r\n\r\n      if (tokenIn) {\r\n        const tempContractIn = new ethers.Contract(tokens[tokenIn].address, erc20Abi, selectedProvider);\r\n        const newBalanceIn = await getBalance(tokenIn, accountList[0], tempContractIn);\r\n        setBalanceIn(newBalanceIn);\r\n\r\n        let allowance;\r\n\r\n        if (tokenIn === 'ETH') {\r\n          setRouterAllowance();\r\n        } else {\r\n          allowance = await makeCall('allowance', tempContractIn, [accountList[0], ROUTER_ADDRESS]);\r\n          setRouterAllowance(allowance);\r\n        }\r\n      }\r\n\r\n      if (tokenOut) {\r\n        const tempContractOut = new ethers.Contract(tokens[tokenOut].address, erc20Abi, selectedProvider);\r\n        const newBalanceOut = await getBalance(tokenOut, accountList[0], tempContractOut);\r\n        setBalanceOut(newBalanceOut);\r\n      }\r\n    }\r\n  };\r\n\r\n  usePoller(getAccountInfo, 6000);\r\n\r\n  const route = trades\r\n    ? trades.length > 0\r\n      ? trades[0].route.path.map(item => {\r\n          return item.symbol;\r\n        })\r\n      : []\r\n    : [];\r\n\r\n  const updateRouterAllowance = async newAllowance => {\r\n    setApproving(true);\r\n    try {\r\n      const tempContract = new ethers.Contract(tokens[tokenIn].address, erc20Abi, signer);\r\n      const result = await makeCall('approve', tempContract, [ROUTER_ADDRESS, newAllowance]);\r\n      console.log(result);\r\n      setApproving(false);\r\n      return true;\r\n    } catch (e) {\r\n      notification.open({\r\n        message: 'Approval unsuccessful',\r\n        description: `Error: ${e.message}`,\r\n      });\r\n    }\r\n  };\r\n\r\n  const approveRouter = async () => {\r\n    const approvalAmount =\r\n      exact === 'in'\r\n        ? ethers.utils.hexlify(parseUnits(amountIn.toString(), tokens[tokenIn].decimals))\r\n        : amountInMax.raw.toString();\r\n    console.log(approvalAmount);\r\n    const approval = updateRouterAllowance(approvalAmount);\r\n    if (approval) {\r\n      notification.open({\r\n        message: 'Token transfer approved',\r\n        description: `You can now swap up to ${amountIn} ${tokenIn}`,\r\n      });\r\n    }\r\n  };\r\n\r\n  const removeRouterAllowance = async () => {\r\n    const approvalAmount = ethers.utils.hexlify(0);\r\n    console.log(approvalAmount);\r\n    const removal = updateRouterAllowance(approvalAmount);\r\n    if (removal) {\r\n      notification.open({\r\n        message: 'Token approval removed',\r\n        description: `The router is no longer approved for ${tokenIn}`,\r\n      });\r\n    }\r\n  };\r\n\r\n  const executeSwap = async () => {\r\n    setSwapping(true);\r\n    try {\r\n      let args;\r\n      const metadata = {};\r\n\r\n      let call;\r\n      const deadline = Math.floor(Date.now() / 1000) + timeLimit;\r\n      const path = trades[0].route.path.map(item => {\r\n        return item.address;\r\n      });\r\n      console.log(path);\r\n      const accountList = await selectedProvider.listAccounts();\r\n      const address = accountList[0];\r\n\r\n      if (exact === 'in') {\r\n        const _amountIn = ethers.utils.hexlify(parseUnits(amountIn.toString(), tokens[tokenIn].decimals));\r\n        const _amountOutMin = ethers.utils.hexlify(ethers.BigNumber.from(amountOutMin.raw.toString()));\r\n        if (tokenIn === 'ETH') {\r\n          call = 'swapExactETHForTokens';\r\n          args = [_amountOutMin, path, address, deadline];\r\n          metadata.value = _amountIn;\r\n        } else {\r\n          call = tokenOut === 'ETH' ? 'swapExactTokensForETH' : 'swapExactTokensForTokens';\r\n          args = [_amountIn, _amountOutMin, path, address, deadline];\r\n        }\r\n      } else if (exact === 'out') {\r\n        const _amountOut = ethers.utils.hexlify(parseUnits(amountOut.toString(), tokens[tokenOut].decimals));\r\n        const _amountInMax = ethers.utils.hexlify(ethers.BigNumber.from(amountInMax.raw.toString()));\r\n        if (tokenIn === 'ETH') {\r\n          call = 'swapETHForExactTokens';\r\n          args = [_amountOut, path, address, deadline];\r\n          metadata.value = _amountInMax;\r\n        } else {\r\n          call = tokenOut === 'ETH' ? 'swapTokensForExactETH' : 'swapTokensForExactTokens';\r\n          args = [_amountOut, _amountInMax, path, address, deadline];\r\n        }\r\n      }\r\n      console.log(call, args, metadata);\r\n      const result = await makeCall(call, routerContract, args, metadata);\r\n      console.log(result);\r\n      notification.open({\r\n        message: 'Swap complete 🦄',\r\n        description: (\r\n          <>\r\n            <Text>{`Swapped ${tokenIn} for ${tokenOut}, transaction: `}</Text>\r\n            <Text copyable>{result.hash}</Text>\r\n          </>\r\n        ),\r\n      });\r\n      setSwapping(false);\r\n    } catch (e) {\r\n      console.log(e);\r\n      setSwapping(false);\r\n      notification.open({\r\n        message: 'Swap unsuccessful',\r\n        description: `Error: ${e.message}`,\r\n      });\r\n    }\r\n  };\r\n\r\n  const showSwapModal = () => {\r\n    setSwapModalVisible(true);\r\n  };\r\n\r\n  const handleSwapModalOk = () => {\r\n    setSwapModalVisible(false);\r\n    executeSwap();\r\n  };\r\n\r\n  const handleSwapModalCancel = () => {\r\n    setSwapModalVisible(false);\r\n  };\r\n\r\n  const insufficientBalance = balanceIn\r\n    ? parseFloat(formatUnits(balanceIn, tokens[tokenIn].decimals)) < amountIn\r\n    : null;\r\n  const inputIsToken = tokenIn !== 'ETH';\r\n  const insufficientAllowance = !inputIsToken\r\n    ? false\r\n    : routerAllowance\r\n    ? parseFloat(formatUnits(routerAllowance, tokens[tokenIn].decimals)) < amountIn\r\n    : null;\r\n  const formattedBalanceIn = balanceIn\r\n    ? parseFloat(formatUnits(balanceIn, tokens[tokenIn].decimals)).toPrecision(6)\r\n    : null;\r\n  const formattedBalanceOut = balanceOut\r\n    ? parseFloat(formatUnits(balanceOut, tokens[tokenOut].decimals)).toPrecision(6)\r\n    : null;\r\n\r\n  const metaIn =\r\n    tokens && tokenList && tokenIn\r\n      ? tokenList.filter(t => {\r\n          return t.address === tokens[tokenIn].address;\r\n        })[0]\r\n      : null;\r\n  const metaOut =\r\n    tokens && tokenList && tokenOut\r\n      ? tokenList.filter(t => {\r\n          return t.address === tokens[tokenOut].address;\r\n        })[0]\r\n      : null;\r\n\r\n  const cleanIpfsURI = uri => {\r\n    try {\r\n      return uri.replace('ipfs://', 'https://ipfs.io/ipfs/');\r\n    } catch (e) {\r\n      console.log(e, uri);\r\n      return uri;\r\n    }\r\n  };\r\n\r\n  const logoIn = metaIn ? cleanIpfsURI(metaIn.logoURI) : null;\r\n  const logoOut = metaOut ? cleanIpfsURI(metaOut.logoURI) : null;\r\n\r\n  const rawPrice = trades && trades[0] ? trades[0].executionPrice : null;\r\n  const price = rawPrice ? rawPrice.toSignificant(7) : null;\r\n  const priceDescription = rawPrice\r\n    ? invertPrice\r\n      ? `${rawPrice.invert().toSignificant(7)} ${tokenIn} per ${tokenOut}`\r\n      : `${price} ${tokenOut} per ${tokenIn}`\r\n    : null;\r\n\r\n  const priceWidget = (\r\n    <Space>\r\n      <Text type=\"secondary\">{priceDescription}</Text>\r\n      <Button\r\n        type=\"text\"\r\n        onClick={() => {\r\n          setInvertPrice(!invertPrice);\r\n        }}\r\n      >\r\n        <RetweetOutlined />\r\n      </Button>\r\n    </Space>\r\n  );\r\n\r\n  const swapModal = (\r\n    <Modal title=\"Confirm swap\" visible={swapModalVisible} onOk={handleSwapModalOk} onCancel={handleSwapModalCancel}>\r\n      <Row>\r\n        <Space>\r\n          <img src={logoIn} alt={tokenIn} width=\"30\" />\r\n          {amountIn}\r\n          {tokenIn}\r\n        </Space>\r\n      </Row>\r\n      <Row justify=\"center\" align=\"middle\" style={{ width: 30 }}>\r\n        <span>↓</span>\r\n      </Row>\r\n      <Row>\r\n        <Space>\r\n          <img src={logoOut} alt={tokenOut} width=\"30\" />\r\n          {amountOut}\r\n          {tokenOut}\r\n        </Space>\r\n      </Row>\r\n      <Divider />\r\n      <Row>{priceWidget}</Row>\r\n      <Row>\r\n        {trades && ((amountOutMin && exact === 'in') || (amountInMax && exact === 'out'))\r\n          ? exact === 'in'\r\n            ? `Output is estimated. You will receive at least ${amountOutMin.toSignificant(\r\n                6,\r\n              )} ${tokenOut} or the transaction will revert.`\r\n            : `Input is estimated. You will sell at most ${amountInMax.toSignificant(\r\n                6,\r\n              )} ${tokenIn} or the transaction will revert.`\r\n          : null}\r\n      </Row>\r\n    </Modal>\r\n  );\r\n\r\n  return (\r\n    <Card\r\n      title={\r\n        <Space>\r\n          <img src=\"https://ipfs.io/ipfs/QmXttGpZrECX5qCyXbBQiqgQNytVGeZW5Anewvh2jc4psg\" width=\"40\" alt=\"uniswapLogo\" />\r\n          <Typography>Uniswapper</Typography>\r\n        </Space>\r\n      }\r\n      extra={\r\n        <Button\r\n          type=\"text\"\r\n          onClick={() => {\r\n            setSettingsVisible(true);\r\n          }}\r\n        >\r\n          <SettingOutlined />\r\n        </Button>\r\n      }\r\n    >\r\n      <Space direction=\"vertical\">\r\n        <Row justify=\"center\" align=\"middle\">\r\n          <Card\r\n            size=\"small\"\r\n            type=\"inner\"\r\n            title={`From${exact === 'out' && tokenIn && tokenOut ? ' (estimate)' : ''}`}\r\n            extra={\r\n              <>\r\n                <img src={logoIn} alt={tokenIn} width=\"30\" />\r\n                <Button\r\n                  type=\"link\"\r\n                  onClick={() => {\r\n                    setAmountOut();\r\n                    setAmountIn(formatUnits(balanceIn, tokens[tokenIn].decimals));\r\n                    setAmountOutMin();\r\n                    setAmountInMax();\r\n                    setExact('in');\r\n                  }}\r\n                >\r\n                  {formattedBalanceIn}\r\n                </Button>\r\n              </>\r\n            }\r\n            style={{ width: 400, textAlign: 'left' }}\r\n          >\r\n            <InputNumber\r\n              style={{ width: '160px' }}\r\n              min={0}\r\n              size=\"large\"\r\n              value={amountIn}\r\n              onChange={e => {\r\n                setAmountOut();\r\n                setTrades();\r\n                setAmountIn(e);\r\n                setExact('in');\r\n              }}\r\n            />\r\n            <Select\r\n              showSearch\r\n              value={tokenIn}\r\n              style={{ width: '120px' }}\r\n              size=\"large\"\r\n              bordered={false}\r\n              defaultValue={defaultToken}\r\n              onChange={value => {\r\n                console.log(value);\r\n                if (value === tokenOut) {\r\n                  console.log('switch!', tokenIn);\r\n                  setTokenOut(tokenIn);\r\n                  setAmountOut(amountIn);\r\n                  setBalanceOut(balanceIn);\r\n                }\r\n                setTokenIn(value);\r\n                setTrades();\r\n                setAmountIn();\r\n                setExact('out');\r\n                setBalanceIn();\r\n              }}\r\n              filterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n              optionFilterProp=\"children\"\r\n            >\r\n              {tokenList.map(token => (\r\n                <Option key={token.symbol} value={token.symbol}>\r\n                  {token.symbol}\r\n                </Option>\r\n              ))}\r\n            </Select>\r\n          </Card>\r\n        </Row>\r\n        <Row justify=\"center\" align=\"middle\">\r\n          <Tooltip title={route.join('->')}>\r\n            <span>↓</span>\r\n          </Tooltip>\r\n        </Row>\r\n        <Row justify=\"center\" align=\"middle\">\r\n          <Card\r\n            size=\"small\"\r\n            type=\"inner\"\r\n            title={`To${exact === 'in' && tokenIn && tokenOut ? ' (estimate)' : ''}`}\r\n            extra={\r\n              <>\r\n                <img src={logoOut} width=\"30\" alt={tokenOut} />\r\n                <Button type=\"text\">{formattedBalanceOut}</Button>\r\n              </>\r\n            }\r\n            style={{ width: 400, textAlign: 'left' }}\r\n          >\r\n            <InputNumber\r\n              style={{ width: '160px' }}\r\n              size=\"large\"\r\n              min={0}\r\n              value={amountOut}\r\n              onChange={e => {\r\n                setAmountOut(e);\r\n                setAmountIn();\r\n                setTrades();\r\n                setExact('out');\r\n              }}\r\n            />\r\n            <Select\r\n              showSearch\r\n              value={tokenOut}\r\n              style={{ width: '120px' }}\r\n              size=\"large\"\r\n              bordered={false}\r\n              onChange={value => {\r\n                console.log(value, tokenIn, tokenOut);\r\n                if (value === tokenIn) {\r\n                  console.log('switch!', tokenOut);\r\n                  setTokenIn(tokenOut);\r\n                  setAmountIn(amountOut);\r\n                  setBalanceIn(balanceOut);\r\n                }\r\n                setTokenOut(value);\r\n                setExact('in');\r\n                setAmountOut();\r\n                setTrades();\r\n                setBalanceOut();\r\n              }}\r\n              filterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n              optionFilterProp=\"children\"\r\n            >\r\n              {tokenList.map(token => (\r\n                <Option key={token.symbol} value={token.symbol}>\r\n                  {token.symbol}\r\n                </Option>\r\n              ))}\r\n            </Select>\r\n          </Card>\r\n        </Row>\r\n        <Row justify=\"center\" align=\"middle\">\r\n          {priceDescription ? priceWidget : null}\r\n        </Row>\r\n        <Row justify=\"center\" align=\"middle\">\r\n          <Space>\r\n            {inputIsToken ? (\r\n              <Button size=\"large\" loading={approving} disabled={!insufficientAllowance} onClick={approveRouter}>\r\n                {!insufficientAllowance && amountIn && amountOut ? 'Approved' : 'Approve'}\r\n              </Button>\r\n            ) : null}\r\n            <Button\r\n              size=\"large\"\r\n              loading={swapping}\r\n              disabled={insufficientAllowance || insufficientBalance || !amountIn || !amountOut}\r\n              onClick={showSwapModal}\r\n            >\r\n              {insufficientBalance ? 'Insufficient balance' : 'Swap!'}\r\n            </Button>\r\n            {swapModal}\r\n          </Space>\r\n        </Row>\r\n      </Space>\r\n      <Drawer\r\n        visible={settingsVisible}\r\n        onClose={() => {\r\n          setSettingsVisible(false);\r\n        }}\r\n        width={500}\r\n      >\r\n        <Descriptions title=\"Details\" column={1} style={{ textAlign: 'left' }}>\r\n          <Descriptions.Item label=\"blockNumber\">{blockNumber}</Descriptions.Item>\r\n          <Descriptions.Item label=\"routerAllowance\">\r\n            <Space>\r\n              {routerAllowance ? formatUnits(routerAllowance, tokens[tokenIn].decimals) : null}\r\n              {routerAllowance > 0 ? <Button onClick={removeRouterAllowance}>Remove Allowance</Button> : null}\r\n            </Space>\r\n          </Descriptions.Item>\r\n          <Descriptions.Item label=\"route\">{route.join('->')}</Descriptions.Item>\r\n          <Descriptions.Item label=\"exact\">{exact}</Descriptions.Item>\r\n          <Descriptions.Item label=\"bestPrice\">\r\n            {trades ? (trades.length > 0 ? trades[0].executionPrice.toSignificant(6) : null) : null}\r\n          </Descriptions.Item>\r\n          <Descriptions.Item label=\"nextMidPrice\">\r\n            {trades ? (trades.length > 0 ? trades[0].nextMidPrice.toSignificant(6) : null) : null}\r\n          </Descriptions.Item>\r\n          <Descriptions.Item label=\"priceImpact\">\r\n            {trades ? (trades.length > 0 ? trades[0].priceImpact.toSignificant(6) : null) : null}\r\n          </Descriptions.Item>\r\n          <Descriptions.Item label=\"slippageTolerance\">\r\n            <InputNumber\r\n              defaultValue={defaultSlippage}\r\n              min={0}\r\n              max={100}\r\n              precision={2}\r\n              formatter={value => `${value}%`}\r\n              parser={value => value.replace('%', '')}\r\n              onChange={value => {\r\n                console.log(value);\r\n\r\n                const slippagePercent = new Percent(Math.round(value * 100).toString(), '10000');\r\n                setSlippageTolerance(slippagePercent);\r\n              }}\r\n            />\r\n          </Descriptions.Item>\r\n          <Descriptions.Item label=\"amountInMax\">{amountInMax ? amountInMax.toExact() : null}</Descriptions.Item>\r\n          <Descriptions.Item label=\"amountOutMin\">{amountOutMin ? amountOutMin.toExact() : null}</Descriptions.Item>\r\n          <Descriptions.Item label=\"timeLimitInSeconds\">\r\n            <InputNumber\r\n              min={0}\r\n              max={3600}\r\n              defaultValue={defaultTimeLimit}\r\n              onChange={value => {\r\n                console.log(value);\r\n                setTimeLimit(value);\r\n              }}\r\n            />\r\n          </Descriptions.Item>\r\n        </Descriptions>\r\n      </Drawer>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default Swap;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { themeChange } from 'theme-change';\r\n\r\nexport default function ThemeSwitcher() {\r\n  const [isDarkMode, setIsDarkMode] = useState(false);\r\n  const theme = localStorage.getItem('theme');\r\n\r\n  useEffect(() => {\r\n    themeChange(false);\r\n    console.log('theme', theme);\r\n    if (theme === 'dracula') {\r\n      setIsDarkMode(true);\r\n    }\r\n  }, []);\r\n\r\n  const toggleTheme = () => {\r\n    setIsDarkMode(previous => {\r\n      return !previous;\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"main fade-in\" style={{ position: 'fixed', right: 8, bottom: 8 }}>\r\n      <label style={{ padding: 8 }} htmlFor=\"label\" className=\"label\">\r\n        {!isDarkMode ? '☀️' : '🌜'}\r\n        <input type=\"checkbox\" checked={isDarkMode} className=\"toggle\" />\r\n        <span\r\n          data-toggle-theme=\"bumblebee,dracula\"\r\n          data-act-class=\"active\"\r\n          className=\"toggle-mark\"\r\n          onClick={toggleTheme}\r\n        />\r\n      </label>\r\n    </div>\r\n  );\r\n}\r\n","import { DownloadOutlined, EditOutlined, SendOutlined } from '@ant-design/icons';\r\nimport { Timeline, Typography } from 'antd';\r\nimport React from 'react';\r\nimport Blockies from 'react-blockies';\r\n\r\nconst { Text } = Typography;\r\n\r\n// displays a timeline for scaffold-eth usage\r\n\r\nexport default function TimelineDisplay(props) {\r\n  return (\r\n    <Timeline mode=\"right\">\r\n      <Timeline.Item dot=\"💾\">\r\n        <Text delete>\r\n          Clone and Install from the{' '}\r\n          <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://github.com/austintgriffith/scaffold-eth\">\r\n            github repo\r\n          </a>\r\n        </Text>\r\n      </Timeline.Item>\r\n\r\n      <Timeline.Item dot=\"⚛️\">\r\n        <Text delete>\r\n          Start your frontend app with: <Text strong>yarn start</Text>\r\n        </Text>\r\n      </Timeline.Item>\r\n\r\n      <Timeline.Item dot=\"⛓\">\r\n        <Text delete={props.chainIsUp}>\r\n          Start your local blockchain with: <Text strong>yarn run chain</Text> (and refresh)\r\n        </Text>\r\n      </Timeline.Item>\r\n\r\n      <Timeline.Item dot=\"📝\">\r\n        <Text delete={props.hasOwner}>\r\n          Compile and deploy your smart contract: <Text strong>yarn run deploy</Text>\r\n        </Text>\r\n      </Timeline.Item>\r\n\r\n      <Timeline.Item dot=\"🤡\">\r\n        <Text delete={props.isNotSmoort}>\r\n          Fix error in <Text code>SmartContractWallet.sol</Text> then: <Text strong>yarn run deploy</Text>\r\n        </Text>\r\n      </Timeline.Item>\r\n\r\n      <Timeline.Item dot={<SendOutlined style={{ fontSize: '16px' }} />} color={props.hasEther ? 'green' : 'blue'}>\r\n        <Text delete={props.hasEther}>\r\n          Send test ether to your{' '}\r\n          <Blockies seed={(props.address ? props.address : '').toLowerCase()} size={8} scale={2} /> address using\r\n          (bottom left) faucet\r\n        </Text>\r\n      </Timeline.Item>\r\n\r\n      <Timeline.Item\r\n        dot={<DownloadOutlined style={{ fontSize: '16px' }} />}\r\n        color={props.contractHasEther ? 'green' : 'blue'}\r\n      >\r\n        <Text delete={props.contractHasEther}>\r\n          Deposit some funds into your{' '}\r\n          <Blockies seed={(props.contractAddress ? props.contractAddress : '').toLowerCase()} size={8} scale={2} />{' '}\r\n          smart contract wallet\r\n        </Text>\r\n      </Timeline.Item>\r\n\r\n      <Timeline.Item\r\n        dot={<EditOutlined style={{ fontSize: '16px' }} />}\r\n        color={props.amOwnerOfContract ? 'green' : 'blue'}\r\n      >\r\n        <Text delete={props.amOwnerOfContract}>\r\n          Set <b>owner</b> of your{' '}\r\n          <Blockies seed={(props.contractAddress ? props.contractAddress : '').toLowerCase()} size={8} scale={2} />{' '}\r\n          smart contract wallet to your{' '}\r\n          <Blockies seed={(props.address ? props.address : '').toLowerCase()} size={8} scale={2} /> address\r\n        </Text>\r\n      </Timeline.Item>\r\n\r\n      <Timeline.Item dot=\"☢️\">\r\n        <Text>\r\n          Yikes, anyone can take ownership of <Text code>SmartContractWallet.sol</Text>\r\n        </Text>\r\n      </Timeline.Item>\r\n\r\n      <Timeline.Item dot=\"🔬\">\r\n        <Text>\r\n          Test your contract with <Text code>buidler/test/myTest.js</Text> then:\r\n          <Text strong>yarn run test</Text>\r\n        </Text>\r\n      </Timeline.Item>\r\n\r\n      <Timeline.Item dot=\"🚀\">\r\n        <Text>\r\n          Build something awesome with 🏗 <a href=\"https://github.com/austintgriffith/scaffold-eth\">scaffold-eth</a> and{' '}\r\n          <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://twitter.com/austingriffith\">\r\n            @ me\r\n          </a>\r\n          !\r\n        </Text>\r\n      </Timeline.Item>\r\n\r\n      <Timeline.Item dot=\"📖\">\r\n        <Text>\r\n          Read more about{' '}\r\n          <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://ethereum.org/developers\">\r\n            Ethereum\r\n          </a>\r\n          ,{' '}\r\n          <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://solidity.readthedocs.io/en/develop/contracts.html\">\r\n            Solidity\r\n          </a>\r\n          , and{' '}\r\n          <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://buidler.dev/tutorial\">\r\n            Buidler\r\n          </a>\r\n        </Text>\r\n      </Timeline.Item>\r\n    </Timeline>\r\n  );\r\n}\r\n","import React, { useCallback, useRef } from 'react';\r\n\r\nconst CreateTrustForm = props => {\r\n  const { onSubmit, onCancel } = props;\r\n\r\n  const addressRef = useRef();\r\n  const dayRef = useRef();\r\n  const monthRef = useRef();\r\n  const yearRef = useRef();\r\n\r\n  const handleSubmit = useCallback(() => {\r\n    const address = addressRef.current ? addressRef.current.value : null;\r\n    const day = dayRef.current ? dayRef.current.value : null;\r\n    const month = monthRef.current ? monthRef.current.value : null;\r\n    const year = yearRef.current ? yearRef.current.value : null;\r\n\r\n    onSubmit(address, day, month, year);\r\n  }, [onSubmit]);\r\n\r\n  return (\r\n    <div className=\"p-10 card bg-base-200 mx-8\">\r\n      <div className=\"form-control\">\r\n        <label className=\"label\">\r\n          <span className=\"label-text\">{\"Beneficiary's Address\"}</span>\r\n        </label>\r\n        <input ref={addressRef} type=\"text\" placeholder=\"Address\" className=\"input\" defaultValue=\"0x0000\" />\r\n        <label className=\"label\">\r\n          <span className=\"label-text\">Fund Unlock Date</span>\r\n        </label>\r\n        <div className=\"grid grid-cols-3 gap-4\">\r\n          <select ref={dayRef} className=\"select select-bordered w-full \">\r\n            <option>Day</option>\r\n            <option>01</option>\r\n            <option>02</option>\r\n            <option>03</option>\r\n            <option>04</option>\r\n            <option selected>05</option>\r\n            <option>06</option>\r\n            <option>07</option>\r\n            <option>08</option>\r\n            <option>09</option>\r\n            <option>10</option>\r\n            <option>11</option>\r\n            <option>12</option>\r\n            <option>13</option>\r\n            <option>14</option>\r\n            <option>15</option>\r\n            <option>16</option>\r\n            <option>17</option>\r\n            <option>18</option>\r\n            <option>19</option>\r\n            <option>20</option>\r\n            <option>21</option>\r\n            <option>22</option>\r\n            <option>23</option>\r\n            <option>24</option>\r\n            <option>25</option>\r\n            <option>26</option>\r\n            <option>27</option>\r\n            <option>28</option>\r\n            <option>29</option>\r\n            <option>30</option>\r\n            <option>31</option>\r\n          </select>\r\n          <select ref={monthRef} className=\"select select-bordered w-full\">\r\n            <option>Month</option>\r\n            <option selected>Jan</option>\r\n            <option>Feb</option>\r\n            <option>Mar</option>\r\n            <option>Apr</option>\r\n            <option>Jun</option>\r\n            <option>July</option>\r\n            <option>Aug</option>\r\n            <option>Sep</option>\r\n            <option>Oct</option>\r\n            <option>Nov</option>\r\n            <option>Dec</option>\r\n          </select>\r\n          <select ref={yearRef} className=\"select select-bordered w-full \">\r\n            <option>Year</option>\r\n            <option>2021</option>\r\n            <option>2022</option>\r\n            <option>2023</option>\r\n            <option>2024</option>\r\n            <option selected>2025</option>\r\n            <option>2026</option>\r\n            <option>2027</option>\r\n            <option>2028</option>\r\n            <option>2029</option>\r\n            <option>2030</option>\r\n            <option>2031</option>\r\n            <option>2032</option>\r\n            <option>2033</option>\r\n            <option>2034</option>\r\n            <option>2035</option>\r\n            <option>2036</option>\r\n            <option>2037</option>\r\n            <option>2038</option>\r\n            <option>2039</option>\r\n            <option>2040</option>\r\n            <option>2041</option>\r\n            <option>2042</option>\r\n            <option>2043</option>\r\n            <option>2044</option>\r\n            <option>2045</option>\r\n            <option>2046</option>\r\n            <option>2047</option>\r\n            <option>2048</option>\r\n            <option>2049</option>\r\n          </select>\r\n        </div>\r\n        <button className=\"btn btn-primary mt-8\" type=\"button\" onClick={handleSubmit}>\r\n          Submit\r\n        </button>\r\n        <button className=\"btn btn-ghost mt-2\" type=\"button\" onClick={onCancel}>\r\n          Cancel\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CreateTrustForm;\r\n","import React, { useRef, useCallback } from 'react';\r\nimport { formatEther, parseEther } from '@ethersproject/units';\r\n\r\nconst TrustModal = props => {\r\n  const { trust, tx, writeContracts } = props;\r\n\r\n  const amountRef = useRef();\r\n  const tokenRef = useRef();\r\n\r\n  const handleSubmit = useCallback(() => {\r\n    const amount = amountRef.current ? amountRef.current.value : null;\r\n    const token = tokenRef.current ? tokenRef.current.value : '0x0000000000000000000000000000000000000000';\r\n\r\n    tx(\r\n      writeContracts.TrustFundManager.deposit(\r\n        '0x0000000000000000000000000000000000000000',\r\n        trust[0],\r\n        '1000000000000000',\r\n        {\r\n          value: parseEther(amount),\r\n        },\r\n      ),\r\n    );\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"modal\">\r\n      <div className=\"modal-box\">\r\n        <div className=\"form-control\">\r\n          <label className=\"label\">\r\n            <span className=\"label-text\">Amount:</span>\r\n          </label>\r\n          <input ref={amountRef} type=\"text\" placeholder=\"Amount\" className=\"input\" defaultValue=\"0.001\" />\r\n          <label className=\"label\">\r\n            <span className=\"label-text\">Token</span>\r\n          </label>\r\n          <div className=\"grid grid-cols-1 grid-rows-1 gap-4\">\r\n            <select ref={tokenRef} className=\"select select-bordered row-span-1\">\r\n              <option>Custom</option>\r\n              <option>ETH</option>\r\n              <option>DAI</option>\r\n              <option>USDC</option>\r\n              <option>USDT</option>\r\n              <option selected>MATIC</option>\r\n            </select>\r\n          </div>\r\n        </div>\r\n        <div className=\"modal-action\">\r\n          <label htmlFor=\"my-modal-2\" className=\"btn w-1/2\">\r\n            Cancel\r\n          </label>\r\n          <label type=\"button\" htmlFor=\"my-modal-2\" className=\"btn btn-primary w-1/2\" onClick={handleSubmit}>\r\n            Fund\r\n          </label>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TrustModal;\r\n","import React, { useEffect, useState, useMemo } from 'react';\r\n// import { StaticJsonRpcProvider } from '@ethersproject/providers';\r\nimport moment from 'moment';\r\nimport { formatEther, parseEther } from '@ethersproject/units';\r\nimport Web3 from 'web3';\r\nimport TrustModal from './TrustModal';\r\n\r\nconst TrustCard = props => {\r\n  const { trust, tx, readContracts, writeContracts, provider, mainnetMatic } = props;\r\n  const web3 = new Web3('https://rpc-mainnet.maticvigil.com');\r\n  const aggregatorV3InterfaceABI = [\r\n    {\r\n      inputs: [],\r\n      name: 'decimals',\r\n      outputs: [{ internalType: 'uint8', name: '', type: 'uint8' }],\r\n      stateMutability: 'view',\r\n      type: 'function',\r\n    },\r\n    {\r\n      inputs: [],\r\n      name: 'description',\r\n      outputs: [{ internalType: 'string', name: '', type: 'string' }],\r\n      stateMutability: 'view',\r\n      type: 'function',\r\n    },\r\n    {\r\n      inputs: [{ internalType: 'uint80', name: '_roundId', type: 'uint80' }],\r\n      name: 'getRoundData',\r\n      outputs: [\r\n        { internalType: 'uint80', name: 'roundId', type: 'uint80' },\r\n        { internalType: 'int256', name: 'answer', type: 'int256' },\r\n        { internalType: 'uint256', name: 'startedAt', type: 'uint256' },\r\n        { internalType: 'uint256', name: 'updatedAt', type: 'uint256' },\r\n        { internalType: 'uint80', name: 'answeredInRound', type: 'uint80' },\r\n      ],\r\n      stateMutability: 'view',\r\n      type: 'function',\r\n    },\r\n    {\r\n      inputs: [],\r\n      name: 'latestRoundData',\r\n      outputs: [\r\n        { internalType: 'uint80', name: 'roundId', type: 'uint80' },\r\n        { internalType: 'int256', name: 'answer', type: 'int256' },\r\n        { internalType: 'uint256', name: 'startedAt', type: 'uint256' },\r\n        { internalType: 'uint256', name: 'updatedAt', type: 'uint256' },\r\n        { internalType: 'uint80', name: 'answeredInRound', type: 'uint80' },\r\n      ],\r\n      stateMutability: 'view',\r\n      type: 'function',\r\n    },\r\n    {\r\n      inputs: [],\r\n      name: 'version',\r\n      outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\r\n      stateMutability: 'view',\r\n      type: 'function',\r\n    },\r\n  ];\r\n  const [currPrice, setCurrPrice] = useState(0);\r\n  const addr = '0xAB594600376Ec9fD91F8e885dADF0CE036862dE0';\r\n  const priceFeed = new web3.eth.Contract(aggregatorV3InterfaceABI, addr);\r\n  priceFeed.methods\r\n    .latestRoundData()\r\n    .call()\r\n    .then(roundData => {\r\n      // Do something with roundData\r\n      // console.log('Latest Round Data', roundData);\r\n      setCurrPrice(roundData.answer / 100000000);\r\n    });\r\n\r\n  const [currentBlockTimestamp, setCurrentBlockTimestamp] = useState(null);\r\n\r\n  const getCurrentBlockTimestamp = useEffect(() => {\r\n    async function fetchTimestamp() {\r\n      const block = await provider.getBlock();\r\n      // console.log('-- BLOCK --', block);\r\n      // console.log('-- BLOCK TIMESTAMP --', block.timestamp);\r\n      setCurrentBlockTimestamp(block.timestamp);\r\n    }\r\n    fetchTimestamp();\r\n  }, [provider]);\r\n\r\n  // console.log('comp', currentBlockTimestamp, trust[1].toNumber());\r\n\r\n  return (\r\n    <div className=\"p-8\">\r\n      <div className=\"card flex flex-row items-center shadow bg-base-200 p-4\">\r\n        <div className=\"card-body text-left\">\r\n          <h2 className=\"card-title\">My Trust Fund</h2>\r\n          <p>{trust[0]}</p>\r\n          <p>Unlocks: {moment.unix(trust[1].toNumber()).format('dddd, MMMM Do YYYY')}</p>\r\n          <p>Token: Matic ${(formatEther(trust[3].toString()) * currPrice).toFixed(2)}</p>\r\n        </div>\r\n        <div>\r\n          {currentBlockTimestamp > trust[1].toNumber() && (\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-secondary btn-outline border-secondary m-1\"\r\n              onClick={() => {\r\n                tx(writeContracts.TrustFundManager.withdrawTrust(trust[0]));\r\n              }}\r\n            >\r\n              Withdraw\r\n            </button>\r\n          )}\r\n          {/* <button\r\n            type=\"button\"\r\n            className=\"btn btn-primary btn-outline border-primary\"\r\n            onClick={() => {\r\n              tx(\r\n                writeContracts.TrustFundManager.deposit(\r\n                  '0x0000000000000000000000000000000000000000',\r\n                  trust[0],\r\n                  '1000000000000000',\r\n                  {\r\n                    value: parseEther('0.01'),\r\n                  },\r\n                ),\r\n              );\r\n              tx(readContracts.TrustFundManager.balances('0xaF443f64B078d31b81A8E044895B56696518d803'));\r\n            }}\r\n          >\r\n            Load\r\n          </button> */}\r\n          <label htmlFor=\"my-modal-2\" className=\"btn btn-primary m-1\">\r\n            Load\r\n          </label>\r\n          <input type=\"checkbox\" id=\"my-modal-2\" className=\"modal-toggle m-1\" />\r\n          <TrustModal\r\n            trust={trust}\r\n            tx={tx}\r\n            writeContracts={writeContracts}\r\n            readContracts={readContracts}\r\n            provider={provider}\r\n            mainnetMatic={mainnetMatic}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TrustCard;\r\n","import React, { useCallback, useMemo, useState, useEffect } from 'react';\r\nimport moment from 'moment';\r\n\r\nimport CreateTrustForm from '../components/CreateTrustForm';\r\nimport TrustCard from '../components/TrustCard';\r\n\r\nimport { useContractReader } from '../hooks';\r\n\r\nconst Trusts = props => {\r\n  const { address, tx, provider, readContracts, writeContracts, mainnetMatic } = props;\r\n\r\n  const [showCreateTrustForm, setShowCreateTrustForm] = useState(false);\r\n  const [TVL, setTVL] = useState({ coins: [] });\r\n\r\n  useEffect(() => {\r\n    const url =\r\n      'https://api.covalenthq.com/v1/137/address/0x941AC5264e57b5875F92378166229A7089e20c55/balances_v2/?nft=true&no-nft-fetch=true&quote-currency=USD&key=ckey_b815be497ee9409ca5422514f62';\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await fetch(url);\r\n        const json = await response.json();\r\n        // console.log(json);\r\n        // setTVL(json.data.items[0].quote);\r\n        const coins = [];\r\n        for (const coin of json.data.items) {\r\n          if (coin.quote > 0) {\r\n            const item = coin.contract_ticker_symbol + ' : $' + coin.quote;\r\n            coins.push(item);\r\n          }\r\n        }\r\n        setTVL({ coins });\r\n      } catch (e) {\r\n        console.log(e);\r\n      }\r\n    };\r\n    fetchData();\r\n  }, []);\r\n\r\n  const totalTrusts = useContractReader(readContracts, 'TrustFundManager', 'totalTrusts');\r\n  const myTrustFund = useContractReader(readContracts, 'TrustFundManager', 'getActiveTrust', [address]);\r\n\r\n  const totalTrustNumber = useMemo(() => {\r\n    return totalTrusts ? totalTrusts.toNumber() : null;\r\n  }, [totalTrusts]);\r\n\r\n  const handleSubmit = useCallback(\r\n    async (beneficiaryAddress, day, month, year) => {\r\n      setShowCreateTrustForm(false);\r\n      const matureDate = moment(`${year}-${month}-${day}`).unix();\r\n\r\n      // console.log('currentBlockTimestamp', currentBlockTimestamp);\r\n      // console.log('beneficiaryAddress', beneficiaryAddress);\r\n      // console.log('matureDate', matureDate);\r\n\r\n      // console.log('writeContracts', writeContracts);\r\n      // console.log('writeContracts.TrustFundManager', writeContracts.TrustFundManager);\r\n\r\n      // tx(writeContracts.TrustFundManager.deposit('0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2', beneficiaryAddress));\r\n      tx(writeContracts.TrustFundManager.createTrust(beneficiaryAddress, matureDate));\r\n\r\n      console.log('DONE');\r\n    },\r\n    [tx, writeContracts],\r\n  );\r\n\r\n  const handleCancel = useCallback(() => {\r\n    setShowCreateTrustForm(false);\r\n  }, []);\r\n\r\n  // console.log('writeContracts', writeContracts);\r\n  // console.log('totalTrusts', totalTrusts);\r\n  console.log('totalTrustNumber', totalTrustNumber);\r\n  console.log('myTrustFund', myTrustFund);\r\n  // console.log('myTrustFund expiry', myTrustFund[1].toNumber());\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"mockup-window flex flex-col bg-base-300 m-10 pb-10 x-8\">\r\n        <div className=\"absolute right-3 top-3\">\r\n          <label htmlFor=\"my-modal-3\" className=\"h-0\">\r\n            <svg\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n              fill=\"none\"\r\n              viewBox=\"0 0 24 24\"\r\n              className=\"inline-block w-4 h-4 stroke-current\"\r\n            >\r\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M15 12a3 3 0 11-6 0 3 3 0 016 0z\" />\r\n              <path\r\n                strokeLinecap=\"round\"\r\n                strokeLinejoin=\"round\"\r\n                strokeWidth=\"2\"\r\n                d=\"M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z\"\r\n              />\r\n            </svg>\r\n          </label>\r\n          <input type=\"checkbox\" id=\"my-modal-3\" className=\"modal-toggle\" />\r\n          <div className=\"modal\">\r\n            <div className=\"modal-box grid gap-4\">\r\n              <p className=\"italic text-xl\">TOTAL VALUE LOCKED</p>\r\n              {TVL.coins.map(coin => (\r\n                <p className=\"text-secondary\">{coin}</p>\r\n              ))}\r\n              <label htmlFor=\"my-modal-3\" className=\"btn \">\r\n                Close\r\n              </label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {showCreateTrustForm ? (\r\n          <CreateTrustForm onSubmit={handleSubmit} onCancel={handleCancel} />\r\n        ) : (\r\n          <button type=\"button\" className=\"flex btn btn-primary mx-8\" onClick={() => setShowCreateTrustForm(true)}>\r\n            Create Trust\r\n          </button>\r\n        )}\r\n\r\n        {myTrustFund && myTrustFund[1].toNumber() > 0 && (\r\n          <TrustCard\r\n            trust={myTrustFund}\r\n            tx={tx}\r\n            writeContracts={writeContracts}\r\n            readContracts={readContracts}\r\n            provider={provider}\r\n            mainnetMatic={mainnetMatic}\r\n          />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Trusts;\r\n","/* eslint-disable jsx-a11y/accessible-emoji */\r\n\r\nimport { formatEther } from '@ethersproject/units';\r\nimport { Select } from 'antd';\r\nimport React, { useState } from 'react';\r\nimport { Address, AddressInput } from '../components';\r\nimport { useTokenList } from '../hooks';\r\n\r\nconst { Option } = Select;\r\n\r\nexport default function Hints({ yourLocalBalance, mainnetProvider, price, address }) {\r\n  // Get a list of tokens from a tokenlist -> see tokenlists.org!\r\n  const [selectedToken, setSelectedToken] = useState('Pick a token!');\r\n  const listOfTokens = useTokenList(\r\n    'https://raw.githubusercontent.com/SetProtocol/uniswap-tokenlist/main/set.tokenlist.json',\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <div style={{ margin: 32 }}>\r\n        <span style={{ marginRight: 8 }}>👷</span>\r\n        Edit your <b>contract</b> in\r\n        <span\r\n          className=\"highlight\"\r\n          style={{ marginLeft: 4, /* backgroundColor: \"#f9f9f9\", */ padding: 4, borderRadius: 4, fontWeight: 'bolder' }}\r\n        >\r\n          packages/hardhat/contracts\r\n        </span>\r\n      </div>\r\n\r\n      <div style={{ margin: 32 }}>\r\n        <span style={{ marginRight: 8 }}>🛰</span>\r\n        <b>compile/deploy</b> with\r\n        <span\r\n          className=\"highlight\"\r\n          style={{ marginLeft: 4, /* backgroundColor: \"#f1f1f1\", */ padding: 4, borderRadius: 4, fontWeight: 'bolder' }}\r\n        >\r\n          yarn run deploy\r\n        </span>\r\n      </div>\r\n\r\n      <div style={{ margin: 32 }}>\r\n        <span style={{ marginRight: 8 }}>🚀</span>\r\n        Your <b>contract artifacts</b> are automatically injected into your frontend at\r\n        <span\r\n          className=\"highlight\"\r\n          style={{ marginLeft: 4, /* backgroundColor: \"#f9f9f9\", */ padding: 4, borderRadius: 4, fontWeight: 'bolder' }}\r\n        >\r\n          packages/react-app/src/contracts/\r\n        </span>\r\n      </div>\r\n\r\n      <div style={{ margin: 32 }}>\r\n        <span style={{ marginRight: 8 }}>🎛</span>\r\n        Edit your <b>frontend</b> in\r\n        <span\r\n          className=\"highlight\"\r\n          style={{ marginLeft: 4, /* backgroundColor: \"#f9f9f9\", */ padding: 4, borderRadius: 4, fontWeight: 'bolder' }}\r\n        >\r\n          packages/reactapp/src/App.js\r\n        </span>\r\n      </div>\r\n\r\n      <div style={{ marginTop: 32 }}>\r\n        <span style={{ marginRight: 8 }}>🔭</span>\r\n        explore the\r\n        <span\r\n          className=\"highlight\"\r\n          style={{\r\n            marginLeft: 4,\r\n            marginRight: 4,\r\n            /* backgroundColor: \"#f9f9f9\", */\r\n            padding: 4,\r\n            borderRadius: 4,\r\n            fontWeight: 'bolder',\r\n          }}\r\n        >\r\n          🖇 hooks\r\n        </span>\r\n        and\r\n        <span\r\n          className=\"highlight\"\r\n          style={{ marginLeft: 4, /* backgroundColor: \"#f9f9f9\", */ padding: 4, borderRadius: 4, fontWeight: 'bolder' }}\r\n        >\r\n          📦 components\r\n        </span>\r\n      </div>\r\n\r\n      <div style={{ marginTop: 32 }}>\r\n        for example, the\r\n        <span\r\n          className=\"highlight\"\r\n          style={{ margin: 4, /* backgroundColor: \"#f9f9f9\", */ padding: 4, borderRadius: 4, fontWeight: 'bolder' }}\r\n        >\r\n          useBalance()\r\n        </span>{' '}\r\n        hook keeps track of your balance: <b>{formatEther(yourLocalBalance || 0)}</b>\r\n      </div>\r\n\r\n      <div style={{ margin: 8 }}>\r\n        <div>\r\n          <b>useTokenList()</b> can get you an array of tokens from{' '}\r\n          <a href=\"https://tokenlists.org\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n            tokenlists.org!\r\n          </a>\r\n        </div>\r\n        <Select\r\n          showSearch\r\n          value={selectedToken}\r\n          onChange={value => {\r\n            console.log(`selected ${value}`);\r\n            setSelectedToken(value);\r\n          }}\r\n          filterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n          optionFilterProp=\"children\"\r\n        >\r\n          {listOfTokens.map(token => (\r\n            <Option key={token.symbol} value={token.symbol}>\r\n              {token.symbol}\r\n            </Option>\r\n          ))}\r\n        </Select>\r\n      </div>\r\n\r\n      <div style={{ marginTop: 32 }}>\r\n        as you build your app you&apos;ll need web3 specific components like an\r\n        <span\r\n          className=\"highlight\"\r\n          style={{ margin: 4, /* backgroundColor: \"#f9f9f9\", */ padding: 4, borderRadius: 4, fontWeight: 'bolder' }}\r\n        >\r\n          {'<AddressInput/>'}\r\n        </span>\r\n        component:\r\n        <div style={{ width: 350, padding: 16, margin: 'auto' }}>\r\n          <AddressInput ensProvider={mainnetProvider} />\r\n        </div>\r\n        <div>(try putting in your address, an ens address, or scanning a QR code)</div>\r\n      </div>\r\n\r\n      <div style={{ marginTop: 32 }}>\r\n        this balance could be multiplied by\r\n        <span\r\n          className=\"highlight\"\r\n          style={{ margin: 4, /* backgroundColor: \"#f9f9f9\", */ padding: 4, borderRadius: 4, fontWeight: 'bolder' }}\r\n        >\r\n          price\r\n        </span>{' '}\r\n        that is loaded with the\r\n        <span\r\n          className=\"highlight\"\r\n          style={{ margin: 4, /* backgroundColor: \"#f9f9f9\", */ padding: 4, borderRadius: 4, fontWeight: 'bolder' }}\r\n        >\r\n          usePrice\r\n        </span>{' '}\r\n        hook with the current value: <b>${price}</b>\r\n      </div>\r\n\r\n      <div style={{ marginTop: 32 }}>\r\n        <span style={{ marginRight: 8 }}>💧</span>\r\n        use the <b>faucet</b> to send funds to\r\n        <span\r\n          className=\"highlight\"\r\n          style={{ marginLeft: 4, /* backgroundColor: \"#f9f9f9\", */ padding: 4, borderRadius: 4, fontWeight: 'bolder' }}\r\n        >\r\n          <Address address={address} minimized /> {address}\r\n        </span>\r\n      </div>\r\n\r\n      <div style={{ marginTop: 32 }}>\r\n        <span style={{ marginRight: 8 }}>📡</span>\r\n        deploy to a testnet or mainnet by editing\r\n        <span\r\n          className=\"highlight\"\r\n          style={{ marginLeft: 4, /* backgroundColor: \"#f9f9f9\", */ padding: 4, borderRadius: 4, fontWeight: 'bolder' }}\r\n        >\r\n          packages/hardhat/hardhat.config.js\r\n        </span>\r\n        and running\r\n        <span\r\n          className=\"highlight\"\r\n          style={{ marginLeft: 4, /* backgroundColor: \"#f1f1f1\", */ padding: 4, borderRadius: 4, fontWeight: 'bolder' }}\r\n        >\r\n          yarn run deploy\r\n        </span>\r\n      </div>\r\n\r\n      <div style={{ marginTop: 32 }}>\r\n        <span style={{ marginRight: 8 }}>🔑</span>\r\n        <span\r\n          className=\"highlight\"\r\n          style={{ marginLeft: 4, /* backgroundColor: \"#f1f1f1\", */ padding: 4, borderRadius: 4, fontWeight: 'bolder' }}\r\n        >\r\n          yarn run generate\r\n        </span>\r\n        will create a deployer account in\r\n        <span\r\n          className=\"highlight\"\r\n          style={{ marginLeft: 4, /* backgroundColor: \"#f9f9f9\", */ padding: 4, borderRadius: 4, fontWeight: 'bolder' }}\r\n        >\r\n          packages/hardhat\r\n        </span>\r\n        <div className=\"highlight\" style={{ marginTop: 8 }}>\r\n          (use{' '}\r\n          <span\r\n            style={{\r\n              marginLeft: 4,\r\n              /* backgroundColor: \"#f1f1f1\", */ padding: 4,\r\n              borderRadius: 4,\r\n              fontWeight: 'bolder',\r\n            }}\r\n          >\r\n            yarn run account\r\n          </span>{' '}\r\n          to display deployer address and balance)\r\n        </div>\r\n      </div>\r\n\r\n      <div style={{ marginTop: 32 }}>\r\n        <span style={{ marginRight: 8 }}>⚙️</span>\r\n        build your app with\r\n        <span\r\n          className=\"highlight\"\r\n          style={{ marginLeft: 4, /* backgroundColor: \"#f1f1f1\", */ padding: 4, borderRadius: 4, fontWeight: 'bolder' }}\r\n        >\r\n          yarn run build\r\n        </span>\r\n      </div>\r\n\r\n      <div style={{ marginTop: 32 }}>\r\n        <span style={{ marginRight: 8 }}>🚢</span>\r\n        ship it!\r\n        <span\r\n          className=\"highlight\"\r\n          style={{ marginLeft: 4, /* backgroundColor: \"#f1f1f1\", */ padding: 4, borderRadius: 4, fontWeight: 'bolder' }}\r\n        >\r\n          yarn run surge\r\n        </span>\r\n        or\r\n        <span\r\n          className=\"highlight\"\r\n          style={{ marginLeft: 4, /* backgroundColor: \"#f1f1f1\", */ padding: 4, borderRadius: 4, fontWeight: 'bolder' }}\r\n        >\r\n          yarn run s3\r\n        </span>\r\n        or\r\n        <span\r\n          className=\"highlight\"\r\n          style={{ marginLeft: 4, /* backgroundColor: \"#f1f1f1\", */ padding: 4, borderRadius: 4, fontWeight: 'bolder' }}\r\n        >\r\n          yarn run ipfs\r\n        </span>\r\n      </div>\r\n\r\n      <div style={{ marginTop: 32 }}>\r\n        <span style={{ marginRight: 8 }}>💬</span>\r\n        for support, join this\r\n        <span\r\n          className=\"highlight\"\r\n          style={{ marginLeft: 4, /* backgroundColor: \"#f9f9f9\", */ padding: 4, borderRadius: 4, fontWeight: 'bolder' }}\r\n        >\r\n          <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://t.me/joinchat/KByvmRe5wkR-8F_zz6AjpA\">\r\n            Telegram Chat\r\n          </a>\r\n        </span>\r\n      </div>\r\n      <div style={{ padding: 128 }}>\r\n        🛠 Check out your browser&apos;s developer console for more... (inpect -&gt console) 🚀\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","/* eslint-disable jsx-a11y/accessible-emoji */\r\nimport { gql, useQuery } from '@apollo/client';\r\nimport { Button, Input, Table, Typography } from 'antd';\r\n// import 'antd/dist/antd.css';\r\nimport GraphiQL from 'graphiql';\r\nimport 'graphiql/graphiql.min.css';\r\nimport fetch from 'isomorphic-fetch';\r\nimport React, { useState } from 'react';\r\nimport { Address } from '../components';\r\n\r\nconst highlight = {\r\n  marginLeft: 4,\r\n  marginRight: 8,\r\n  /* backgroundColor: \"#f9f9f9\", */ padding: 4,\r\n  borderRadius: 4,\r\n  fontWeight: 'bolder',\r\n};\r\n\r\nfunction Subgraph(props) {\r\n  function graphQLFetcher(graphQLParams) {\r\n    return fetch(props.subgraphUri, {\r\n      method: 'post',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify(graphQLParams),\r\n    }).then(response => response.json());\r\n  }\r\n\r\n  const EXAMPLE_GRAPHQL = `\r\n  {\r\n    purposes(first: 25, orderBy: createdAt, orderDirection: desc) {\r\n      id\r\n      purpose\r\n      createdAt\r\n      sender {\r\n        id\r\n      }\r\n    }\r\n    senders {\r\n      id\r\n      address\r\n      purposeCount\r\n    }\r\n  }\r\n  `;\r\n  const EXAMPLE_GQL = gql(EXAMPLE_GRAPHQL);\r\n  const { loading, data } = useQuery(EXAMPLE_GQL, { pollInterval: 2500 });\r\n\r\n  const purposeColumns = [\r\n    {\r\n      title: 'Purpose',\r\n      dataIndex: 'purpose',\r\n      key: 'purpose',\r\n    },\r\n    {\r\n      title: 'Sender',\r\n      key: 'id',\r\n      render: record => <Address value={record.sender.id} ensProvider={props.mainnetProvider} fontSize={16} />,\r\n    },\r\n    {\r\n      title: 'createdAt',\r\n      key: 'createdAt',\r\n      dataIndex: 'createdAt',\r\n      render: d => new Date(d * 1000).toISOString(),\r\n    },\r\n  ];\r\n\r\n  const [newPurpose, setNewPurpose] = useState('loading...');\r\n\r\n  const deployWarning = (\r\n    <div style={{ marginTop: 8, padding: 8 }}>Warning: 🤔 Have you deployed your subgraph yet?</div>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <div style={{ margin: 'auto', marginTop: 32 }}>\r\n        You will find that parsing/tracking events with the{' '}\r\n        <span className=\"highlight\" style={highlight}>\r\n          useEventListener\r\n        </span>{' '}\r\n        hook becomes a chore for every new project.\r\n      </div>\r\n      <div style={{ margin: 'auto', marginTop: 32 }}>\r\n        Instead, you can use{' '}\r\n        <a href=\"https://thegraph.com/docs/introduction\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n          The Graph\r\n        </a>{' '}\r\n        with 🏗 scaffold-eth (\r\n        <a href=\"https://youtu.be/T5ylzOTkn-Q\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n          learn more\r\n        </a>\r\n        ):\r\n      </div>\r\n\r\n      <div style={{ margin: 32 }}>\r\n        <span style={{ marginRight: 8 }}>🚮</span>\r\n        Clean up previous data:\r\n        <span className=\"highlight\" style={highlight}>\r\n          rm -rf docker/graph-node/data/\r\n        </span>\r\n      </div>\r\n\r\n      <div style={{ margin: 32 }}>\r\n        <span style={{ marginRight: 8 }}>📡</span>\r\n        Spin up a local graph node by running\r\n        <span className=\"highlight\" style={highlight}>\r\n          yarn graph-run-node\r\n        </span>\r\n        <span style={{ marginLeft: 4 }}>\r\n          {' '}\r\n          (requires{' '}\r\n          <a href=\"https://www.docker.com/products/docker-desktop\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n            {' '}\r\n            Docker\r\n          </a>\r\n          ){' '}\r\n        </span>\r\n      </div>\r\n\r\n      <div style={{ margin: 32 }}>\r\n        <span style={{ marginRight: 8 }}>📝</span>\r\n        Create your <b>local subgraph</b> by running\r\n        <span className=\"highlight\" style={highlight}>\r\n          yarn graph-create-local\r\n        </span>\r\n        (only required once!)\r\n      </div>\r\n\r\n      <div style={{ margin: 32 }}>\r\n        <span style={{ marginRight: 8 }}>🚢</span>\r\n        Deploy your <b>local subgraph</b> by running\r\n        <span className=\"highlight\" style={highlight}>\r\n          yarn graph-ship-local\r\n        </span>\r\n      </div>\r\n\r\n      <div style={{ margin: 32 }}>\r\n        <span style={{ marginRight: 8 }}>🖍️</span>\r\n        Edit your <b>local subgraph</b> in\r\n        <span className=\"highlight\" style={highlight}>\r\n          packages/subgraph/src\r\n        </span>\r\n        (learn more about subgraph definition{' '}\r\n        <a href=\"https://thegraph.com/docs/define-a-subgraph\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n          here\r\n        </a>\r\n        )\r\n      </div>\r\n\r\n      <div style={{ margin: 32 }}>\r\n        <span style={{ marginRight: 8 }}>🤩</span>\r\n        Deploy your <b>contracts and your subgraph</b> in one go by running\r\n        <span className=\"highlight\" style={highlight}>\r\n          yarn deploy-and-graph\r\n        </span>\r\n      </div>\r\n\r\n      <div style={{ width: 780, margin: 'auto', paddingBottom: 64 }}>\r\n        <div style={{ margin: 32, textAlign: 'right' }}>\r\n          <Input\r\n            onChange={e => {\r\n              setNewPurpose(e.target.value);\r\n            }}\r\n          />\r\n          <Button\r\n            onClick={() => {\r\n              console.log('newPurpose', newPurpose);\r\n              /* look how you call setPurpose on your contract: */\r\n              props.tx(props.writeContracts.YourContract.setPurpose(newPurpose));\r\n            }}\r\n          >\r\n            Set Purpose\r\n          </Button>\r\n        </div>\r\n\r\n        {data ? (\r\n          <Table dataSource={data.purposes} columns={purposeColumns} rowKey=\"id\" />\r\n        ) : (\r\n          <Typography>{loading ? 'Loading...' : deployWarning}</Typography>\r\n        )}\r\n\r\n        <div style={{ margin: 32, height: 400, border: '1px solid #888888', textAlign: 'left' }}>\r\n          <GraphiQL fetcher={graphQLFetcher} docExplorerOpen query={EXAMPLE_GRAPHQL} />\r\n        </div>\r\n      </div>\r\n\r\n      <div style={{ padding: 64 }}>...</div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Subgraph;\r\n","import React, { useCallback, useEffect, useState } from 'react';\r\nimport Web3Modal from 'web3modal';\r\nimport WalletConnectProvider from '@walletconnect/web3-provider';\r\nimport { useUserAddress } from 'eth-hooks';\r\nimport { formatEther, parseEther } from '@ethersproject/units';\r\nimport { BrowserRouter, Link, Route, Switch } from 'react-router-dom';\r\nimport { StaticJsonRpcProvider, Web3Provider } from '@ethersproject/providers';\r\n\r\nimport { Alert, Button, Col, Menu, Row } from 'antd';\r\nimport { ExampleUI, Hints, Subgraph, Trusts } from './views';\r\nimport { Account, Contract, Faucet, GasGauge, Header, Ramp, ThemeSwitch } from './components';\r\n\r\nimport {\r\n  useBalance,\r\n  useContractLoader,\r\n  useContractReader,\r\n  useEventListener,\r\n  useExchangePrice,\r\n  useExternalContractLoader,\r\n  useGasPrice,\r\n  useOnBlock,\r\n  useUserProvider,\r\n} from './hooks';\r\nimport { Transactor } from './helpers';\r\nimport { DAI_ABI, DAI_ADDRESS, INFURA_ID, NETWORK, NETWORKS } from './constants';\r\n\r\nimport './App.css';\r\n// import 'antd/dist/antd.css';\r\n\r\n/*\r\n    Welcome to 🏗 scaffold-eth !\r\n\r\n    Code:\r\n    https://github.com/austintgriffith/scaffold-eth\r\n\r\n    Support:\r\n    https://t.me/joinchat/KByvmRe5wkR-8F_zz6AjpA\r\n    or DM @austingriffith on twitter or telegram\r\n\r\n    You should get your own Infura.io ID and put it in `constants.js`\r\n    (this is your connection to the main Ethereum network for ENS etc.)\r\n\r\n\r\n    🌏 EXTERNAL CONTRACTS:\r\n    You can also bring in contract artifacts in `constants.js`\r\n    (and then use the `useExternalContractLoader()` hook!)\r\n*/\r\n\r\n/// 📡 What chain are your contracts deployed to?\r\nconst targetNetwork = NETWORKS.matic; // <------- select your target frontend network (localhost, rinkeby, xdai, mainnet)\r\n\r\n// 😬 Sorry for all the console logging\r\nconst DEBUG = false;\r\n\r\n// 🛰 providers\r\nif (DEBUG) console.log('📡 Connecting to Mainnet Ethereum');\r\n// const mainnetProvider = getDefaultProvider(\"mainnet\", { infura: INFURA_ID, etherscan: ETHERSCAN_KEY, quorum: 1 });\r\n// const mainnetProvider = new InfuraProvider(\"mainnet\",INFURA_ID);\r\n//\r\n// attempt to connect to our own scaffold eth rpc and if that fails fall back to infura...\r\n// Using StaticJsonRpcProvider as the chainId won't change see https://github.com/ethers-io/ethers.js/issues/901\r\nconst scaffoldEthProvider = new StaticJsonRpcProvider('https://rpc.scaffoldeth.io:48544');\r\nconst mainnetInfura = new StaticJsonRpcProvider('https://mainnet.infura.io/v3/' + INFURA_ID);\r\nconst mainnetMatic = new StaticJsonRpcProvider('https://matic-mainnet.chainstacklabs.com');\r\n// ( ⚠️ Getting \"failed to meet quorum\" errors? Check your INFURA_I\r\n\r\n// 🏠 Your local provider is usually pointed at your local blockchain\r\nconst localProviderUrl = targetNetwork.rpcUrl;\r\n// as you deploy to other networks you can set REACT_APP_PROVIDER=https://dai.poa.network in packages/react-app/.env\r\nconst localProviderUrlFromEnv = process.env.REACT_APP_PROVIDER ? process.env.REACT_APP_PROVIDER : localProviderUrl;\r\nif (DEBUG) console.log('🏠 Connecting to provider:', localProviderUrlFromEnv);\r\nconst localProvider = new StaticJsonRpcProvider(localProviderUrlFromEnv);\r\n\r\n// 🔭 block explorer URL\r\nconst blockExplorer = targetNetwork.blockExplorer;\r\n\r\n/*\r\n  Web3 modal helps us \"connect\" external wallets:\r\n*/\r\nconst web3Modal = new Web3Modal({\r\n  // network: \"mainnet\", // optional\r\n  cacheProvider: true, // optional\r\n  providerOptions: {\r\n    walletconnect: {\r\n      package: WalletConnectProvider, // required\r\n      options: {\r\n        infuraId: INFURA_ID,\r\n      },\r\n    },\r\n  },\r\n});\r\n\r\nconst logoutOfWeb3Modal = async () => {\r\n  await web3Modal.clearCachedProvider();\r\n  setTimeout(() => {\r\n    window.location.reload();\r\n  }, 1);\r\n};\r\n\r\nfunction App(props) {\r\n  const mainnetProvider = scaffoldEthProvider && scaffoldEthProvider._network ? scaffoldEthProvider : mainnetInfura;\r\n\r\n  const [injectedProvider, setInjectedProvider] = useState();\r\n  /* 💵 This hook will get the price of ETH from 🦄 Uniswap: */\r\n  const price = useExchangePrice(targetNetwork, mainnetProvider);\r\n\r\n  /* 🔥 This hook will get the price of Gas from ⛽️ EtherGasStation */\r\n  const gasPrice = useGasPrice(targetNetwork, 'fast');\r\n  // Use your injected provider from 🦊 Metamask or if you don't have it then instantly generate a 🔥 burner wallet.\r\n  const userProvider = useUserProvider(injectedProvider, localProvider);\r\n  const address = useUserAddress(userProvider);\r\n\r\n  // You can warn the user if you would like them to be on a specific network\r\n  const localChainId = localProvider && localProvider._network && localProvider._network.chainId;\r\n  const selectedChainId = userProvider && userProvider._network && userProvider._network.chainId;\r\n\r\n  // For more hooks, check out 🔗eth-hooks at: https://www.npmjs.com/package/eth-hooks\r\n\r\n  // The transactor wraps transactions and provides notificiations\r\n  const tx = Transactor(userProvider, gasPrice);\r\n\r\n  // Faucet Tx can be used to send funds from the faucet\r\n  const faucetTx = Transactor(localProvider, gasPrice);\r\n\r\n  // 🏗 scaffold-eth is full of handy hooks like this one to get your balance:\r\n  const yourLocalBalance = useBalance(localProvider, address);\r\n\r\n  // Just plug in different 🛰 providers to get your balance on different chains:\r\n  const yourMainnetBalance = useBalance(mainnetProvider, address);\r\n\r\n  // Load in your local 📝 contract and read a value from it:\r\n  const readContracts = useContractLoader(localProvider);\r\n\r\n  // If you want to make 🔐 write transactions to your contracts, use the userProvider:\r\n  const writeContracts = useContractLoader(userProvider);\r\n\r\n  // EXTERNAL CONTRACT EXAMPLE:\r\n  //\r\n  // If you want to bring in the mainnet DAI contract it would look like:\r\n  const mainnetDAIContract = useExternalContractLoader(mainnetProvider, DAI_ADDRESS, DAI_ABI);\r\n\r\n  // If you want to call a function on a new block\r\n  useOnBlock(mainnetProvider, () => {\r\n    console.log(`⛓ A new mainnet block is here: ${mainnetProvider._lastBlockNumber}`);\r\n  });\r\n\r\n  // Then read your DAI balance like:\r\n  // const myMainnetDAIBalance = useContractReader({ DAI: mainnetDAIContract }, 'DAI', 'balanceOf', [\r\n  //   '0x34aA3F359A9D614239015126635CE7732c18fDF3',\r\n  // ]);\r\n\r\n  // keep track of a variable from the contract in the local React state:\r\n  const purpose = useContractReader(readContracts, 'YourContract', 'purpose');\r\n\r\n  // 📟 Listen for broadcast events\r\n  const setPurposeEvents = useEventListener(readContracts, 'YourContract', 'SetPurpose', localProvider, 1);\r\n\r\n  /*\r\n  const addressFromENS = useResolveName(mainnetProvider, \"austingriffith.eth\");\r\n  console.log(\"🏷 Resolved austingriffith.eth as:\",addressFromENS)\r\n  */\r\n\r\n  //\r\n  // 🧫 DEBUG 👨🏻‍🔬\r\n  //\r\n  // useEffect(() => {\r\n  //   if (\r\n  //     DEBUG &&\r\n  //     mainnetProvider &&\r\n  //     address &&\r\n  //     selectedChainId &&\r\n  //     yourLocalBalance &&\r\n  //     yourMainnetBalance &&\r\n  //     readContracts &&\r\n  //     writeContracts &&\r\n  //     mainnetDAIContract\r\n  //   ) {\r\n  //     console.log('_____________________________________ 🏗 scaffold-eth _____________________________________');\r\n  // console.log('🌎 mainnetProvider', mainnetProvider);\r\n  //     console.log('🏠 localChainId', localChainId);\r\n  //     console.log('👩‍💼 selected address:', address);\r\n  //     console.log('🕵🏻‍♂️ selectedChainId:', selectedChainId);\r\n  //     console.log('💵 yourLocalBalance', yourLocalBalance ? formatEther(yourLocalBalance) : '...');\r\n  //     console.log('💵 yourMainnetBalance', yourMainnetBalance ? formatEther(yourMainnetBalance) : '...');\r\n  //     console.log('📝 readContracts', readContracts);\r\n  // console.log('🌍 DAI contract on mainnet:', mainnetDAIContract);\r\n  //     console.log('🔐 writeContracts', writeContracts);\r\n  //   }\r\n  // }, [\r\n  //   mainnetProvider,\r\n  //   address,\r\n  //   selectedChainId,\r\n  //   yourLocalBalance,\r\n  //   yourMainnetBalance,\r\n  //   readContracts,\r\n  //   writeContracts,\r\n  //   mainnetDAIContract,\r\n  // ]);\r\n\r\n  let networkDisplay = '';\r\n  if (localChainId && selectedChainId && localChainId !== selectedChainId) {\r\n    const networkSelected = NETWORK(selectedChainId);\r\n    const networkLocal = NETWORK(localChainId);\r\n    if (selectedChainId === 1337 && localChainId === 31337) {\r\n      networkDisplay = (\r\n        <div style={{ zIndex: 2, position: 'absolute', right: 0, top: 60, padding: 16 }}>\r\n          <Alert\r\n            message=\"⚠️ Wrong Network ID\"\r\n            description={\r\n              <div>\r\n                You have <b>chain id 1337</b> for localhost and you need to change it to <b>31337</b> to work with\r\n                HardHat.\r\n                <div>(MetaMask -&gt; Settings -&gt; Networks -&gt; Chain ID -&gt; 31337)</div>\r\n              </div>\r\n            }\r\n            type=\"error\"\r\n            closable={false}\r\n          />\r\n        </div>\r\n      );\r\n    } else {\r\n      networkDisplay = (\r\n        <div style={{ zIndex: 2, position: 'absolute', right: 0, top: 60, padding: 16 }}>\r\n          <Alert\r\n            message=\"⚠️ Wrong Network\"\r\n            description={\r\n              <div>\r\n                You have <b>{networkSelected && networkSelected.name}</b> selected and you need to be on{' '}\r\n                <b>{networkLocal && networkLocal.name}</b>.\r\n              </div>\r\n            }\r\n            type=\"error\"\r\n            closable={false}\r\n          />\r\n        </div>\r\n      );\r\n    }\r\n  } else {\r\n    networkDisplay = (\r\n      <div style={{ zIndex: -1, position: 'absolute', right: 154, top: 28, padding: 16, color: targetNetwork.color }}>\r\n        {targetNetwork.name}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const loadWeb3Modal = useCallback(async () => {\r\n    const provider = await web3Modal.connect();\r\n    setInjectedProvider(new Web3Provider(provider));\r\n  }, [setInjectedProvider]);\r\n\r\n  useEffect(() => {\r\n    if (web3Modal.cachedProvider) {\r\n      loadWeb3Modal();\r\n    }\r\n  }, [loadWeb3Modal]);\r\n\r\n  const [route, setRoute] = useState();\r\n  useEffect(() => {\r\n    setRoute(window.location.pathname);\r\n  }, [setRoute]);\r\n\r\n  let faucetHint = '';\r\n  const faucetAvailable = localProvider && localProvider.connection && targetNetwork.name === 'localhost';\r\n\r\n  const [faucetClicked, setFaucetClicked] = useState(false);\r\n  if (\r\n    !faucetClicked &&\r\n    localProvider &&\r\n    localProvider._network &&\r\n    localProvider._network.chainId === 31337 &&\r\n    yourLocalBalance &&\r\n    formatEther(yourLocalBalance) <= 0\r\n  ) {\r\n    faucetHint = (\r\n      <div style={{ padding: 16 }}>\r\n        <Button\r\n          type=\"primary\"\r\n          onClick={() => {\r\n            faucetTx({\r\n              to: address,\r\n              value: parseEther('0.01'),\r\n            });\r\n            setFaucetClicked(true);\r\n          }}\r\n        >\r\n          💰 Grab funds from the faucet ⛽️\r\n        </Button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      {/* ✏️ Edit the header and change the title to your project name */}\r\n      {/* <Header /> */}\r\n\r\n      {/* {networkDisplay} */}\r\n\r\n      <BrowserRouter>\r\n        {/* <Menu style={{ textAlign: 'center' }} selectedKeys={[route]} mode=\"horizontal\">\r\n          <Menu.Item key=\"/\">\r\n            <Link\r\n              onClick={() => {\r\n                setRoute('/');\r\n              }}\r\n              to=\"/\"\r\n            >\r\n              YourContract\r\n            </Link>\r\n          </Menu.Item>\r\n          <Menu.Item key=\"/hints\">\r\n            <Link\r\n              onClick={() => {\r\n                setRoute('/hints');\r\n              }}\r\n              to=\"/hints\"\r\n            >\r\n              Hints\r\n            </Link>\r\n          </Menu.Item>\r\n          <Menu.Item key=\"/exampleui\">\r\n            <Link\r\n              onClick={() => {\r\n                setRoute('/exampleui');\r\n              }}\r\n              to=\"/exampleui\"\r\n            >\r\n              ExampleUI\r\n            </Link>\r\n          </Menu.Item>\r\n          <Menu.Item key=\"/mainnetdai\">\r\n            <Link\r\n              onClick={() => {\r\n                setRoute('/mainnetdai');\r\n              }}\r\n              to=\"/mainnetdai\"\r\n            >\r\n              Mainnet DAI\r\n            </Link>\r\n          </Menu.Item>\r\n          <Menu.Item key=\"/subgraph\">\r\n            <Link\r\n              onClick={() => {\r\n                setRoute('/subgraph');\r\n              }}\r\n              to=\"/subgraph\"\r\n            >\r\n              Subgraph\r\n            </Link>\r\n          </Menu.Item>\r\n        </Menu> */}\r\n\r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n            {/*\r\n                🎛 this scaffolding is full of commonly used components\r\n                this <Contract/> component will automatically parse your ABI\r\n                and give you a form to interact with it locally\r\n            */}\r\n            <div className=\"flex items-center justify-center h-screen\">\r\n              <Trusts\r\n                address={address}\r\n                tx={tx}\r\n                provider={userProvider}\r\n                readContracts={readContracts}\r\n                writeContracts={writeContracts}\r\n                mainnetMatic={mainnetMatic}\r\n              />\r\n            </div>\r\n            {/* <Contract\r\n              name=\"YourContract\"\r\n              signer={userProvider.getSigner()}\r\n              provider={localProvider}\r\n              address={address}\r\n              blockExplorer={blockExplorer}\r\n            /> */}\r\n\r\n            {/* uncomment for a second contract:\r\n            <Contract\r\n              name=\"SecondContract\"\r\n              signer={userProvider.getSigner()}\r\n              provider={localProvider}\r\n              address={address}\r\n              blockExplorer={blockExplorer}\r\n            />\r\n            */}\r\n\r\n            {/* Uncomment to display and interact with an external contract (DAI on mainnet):\r\n            <Contract\r\n              name=\"DAI\"\r\n              customContract={mainnetDAIContract}\r\n              signer={userProvider.getSigner()}\r\n              provider={mainnetProvider}\r\n              address={address}\r\n              blockExplorer={blockExplorer}\r\n            />\r\n            */}\r\n          </Route>\r\n          {/* <Route path=\"/hints\">\r\n            <Hints\r\n              address={address}\r\n              yourLocalBalance={yourLocalBalance}\r\n              mainnetProvider={mainnetProvider}\r\n              price={price}\r\n            />\r\n          </Route>\r\n          <Route path=\"/exampleui\">\r\n            <ExampleUI\r\n              address={address}\r\n              userProvider={userProvider}\r\n              mainnetProvider={mainnetProvider}\r\n              localProvider={localProvider}\r\n              yourLocalBalance={yourLocalBalance}\r\n              price={price}\r\n              tx={tx}\r\n              writeContracts={writeContracts}\r\n              readContracts={readContracts}\r\n              purpose={purpose}\r\n              setPurposeEvents={setPurposeEvents}\r\n            />\r\n          </Route>\r\n          <Route path=\"/mainnetdai\">\r\n            <Contract\r\n              name=\"DAI\"\r\n              customContract={mainnetDAIContract}\r\n              signer={userProvider.getSigner()}\r\n              provider={mainnetProvider}\r\n              address={address}\r\n              blockExplorer=\"https://etherscan.io/\"\r\n            />\r\n          </Route>\r\n          <Route path=\"/subgraph\">\r\n            <Subgraph\r\n              subgraphUri={props.subgraphUri}\r\n              tx={tx}\r\n              writeContracts={writeContracts}\r\n              mainnetProvider={mainnetProvider}\r\n            />\r\n          </Route> */}\r\n        </Switch>\r\n      </BrowserRouter>\r\n\r\n      <ThemeSwitch />\r\n\r\n      {/* 👨‍💼 Your account is in the top right with a wallet at connect options */}\r\n      {/* <div style={{ position: 'fixed', textAlign: 'right', right: 0, top: 0, padding: 10 }}>\r\n        <Account\r\n          address={address}\r\n          localProvider={localProvider}\r\n          userProvider={userProvider}\r\n          mainnetProvider={mainnetProvider}\r\n          price={price}\r\n          web3Modal={web3Modal}\r\n          loadWeb3Modal={loadWeb3Modal}\r\n          logoutOfWeb3Modal={logoutOfWeb3Modal}\r\n          blockExplorer={blockExplorer}\r\n        />\r\n        {faucetHint}\r\n      </div> */}\r\n\r\n      {/* 🗺 Extra UI like gas price, eth price, faucet, and support: */}\r\n      {/* <div style={{ position: 'fixed', textAlign: 'left', left: 0, bottom: 20, padding: 10 }}>\r\n        <Row align=\"middle\" gutter={[4, 4]}>\r\n          <Col span={8}>\r\n            <Ramp price={price} address={address} networks={NETWORKS} />\r\n          </Col>\r\n\r\n          <Col span={8} style={{ textAlign: 'center', opacity: 0.8 }}>\r\n            <GasGauge gasPrice={gasPrice} />\r\n          </Col>\r\n          <Col span={8} style={{ textAlign: 'center', opacity: 1 }}>\r\n            <Button\r\n              onClick={() => {\r\n                window.open('https://t.me/joinchat/KByvmRe5wkR-8F_zz6AjpA');\r\n              }}\r\n              size=\"large\"\r\n              shape=\"round\"\r\n            >\r\n              <span style={{ marginRight: 8 }} role=\"img\" aria-label=\"support\">\r\n                💬\r\n              </span>\r\n              Support\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n\r\n        <Row align=\"middle\" gutter={[4, 4]}>\r\n          <Col span={24}>\r\n            {faucetAvailable ? (\r\n              <Faucet localProvider={localProvider} price={price} ensProvider={mainnetProvider} />\r\n            ) : (\r\n              ''\r\n            )}\r\n          </Col>\r\n        </Row>\r\n      </div> */}\r\n    </div>\r\n  );\r\n}\r\n\r\n/* eslint-disable */\r\nwindow.ethereum &&\r\n  window.ethereum.on('chainChanged', chainId => {\r\n    web3Modal.cachedProvider &&\r\n      setTimeout(() => {\r\n        window.location.reload();\r\n      }, 1);\r\n  });\r\n\r\nwindow.ethereum &&\r\n  window.ethereum.on('accountsChanged', accounts => {\r\n    web3Modal.cachedProvider &&\r\n      setTimeout(() => {\r\n        window.location.reload();\r\n      }, 1);\r\n  });\r\n/* eslint-enable */\r\n\r\nexport default App;\r\n","import { Fetcher, Route, Token, WETH } from '@uniswap/sdk';\r\nimport { usePoller } from 'eth-hooks';\r\nimport { useState } from 'react';\r\n\r\nexport default function useExchangePrice(targetNetwork, mainnetProvider, pollTime) {\r\n  const [price, setPrice] = useState(0);\r\n\r\n  const pollPrice = () => {\r\n    async function getPrice() {\r\n      if (targetNetwork.price) {\r\n        setPrice(targetNetwork.price);\r\n      } else {\r\n        const DAI = new Token(\r\n          mainnetProvider.network ? mainnetProvider.network.chainId : 1,\r\n          '0x6B175474E89094C44Da98b954EedeAC495271d0F',\r\n          18,\r\n        );\r\n        const pair = await Fetcher.fetchPairData(DAI, WETH[DAI.chainId], mainnetProvider);\r\n        const route = new Route([pair], WETH[DAI.chainId]);\r\n        setPrice(parseFloat(route.midPrice.toSignificant(6)));\r\n      }\r\n    }\r\n    getPrice();\r\n  };\r\n  usePoller(pollPrice, pollTime || 9777);\r\n\r\n  return price;\r\n}\r\n","import axios from 'axios';\r\nimport { usePoller } from 'eth-hooks';\r\nimport { useState } from 'react';\r\n\r\nexport default function useGasPrice(targetNetwork, speed) {\r\n  const [gasPrice, setGasPrice] = useState();\r\n  const loadGasPrice = async () => {\r\n    if (targetNetwork.gasPrice) {\r\n      setGasPrice(targetNetwork.gasPrice);\r\n    } else {\r\n      axios\r\n        .get('https://ethgasstation.info/json/ethgasAPI.json')\r\n        .then(response => {\r\n          const newGasPrice = response.data[speed || 'fast'] * 100000000;\r\n          if (newGasPrice !== gasPrice) {\r\n            setGasPrice(newGasPrice);\r\n          }\r\n        })\r\n        .catch(error => console.log(error));\r\n    }\r\n  };\r\n\r\n  usePoller(loadGasPrice, 39999);\r\n  return gasPrice;\r\n}\r\n","/* eslint-disable import/no-dynamic-require */\r\n/* eslint-disable global-require */\r\nimport { Contract } from '@ethersproject/contracts';\r\nimport { useEffect, useState } from 'react';\r\n\r\n/*\r\n  when you want to load an existing contract using just the provider, address, and ABI\r\n*/\r\n\r\n/*\r\n  ~ What it does? ~\r\n\r\n  Enables you to load an existing mainnet DAI contract using the provider, address and abi\r\n\r\n  ~ How can I use? ~\r\n\r\n  const mainnetDAIContract = useExternalContractLoader(mainnetProvider, DAI_ADDRESS, DAI_ABI)\r\n\r\n  ~ Features ~\r\n\r\n  - Specify mainnetProvider\r\n  - Specify DAI_ADDRESS and DAI_ABI, you can load/write them using constants.js\r\n*/\r\nexport default function useExternalContractLoader(provider, address, ABI, optionalBytecode) {\r\n  const [contract, setContract] = useState();\r\n  useEffect(() => {\r\n    async function loadContract() {\r\n      if (typeof provider !== 'undefined' && address && ABI) {\r\n        try {\r\n          // we need to check to see if this provider has a signer or not\r\n          let signer;\r\n          const accounts = await provider.listAccounts();\r\n          if (accounts && accounts.length > 0) {\r\n            signer = provider.getSigner();\r\n          } else {\r\n            signer = provider;\r\n          }\r\n\r\n          const customContract = new Contract(address, ABI, signer);\r\n          if (optionalBytecode) customContract.bytecode = optionalBytecode;\r\n\r\n          setContract(customContract);\r\n        } catch (e) {\r\n          console.log('ERROR LOADING EXTERNAL CONTRACT AT ' + address + ' (check provider, address, and ABI)!!', e);\r\n        }\r\n      }\r\n    }\r\n    loadContract();\r\n  }, [provider, address, ABI, optionalBytecode]);\r\n  return contract;\r\n}\r\n","import { useEffect, useState } from 'react';\r\n\r\n/*\r\n  ~ What it does? ~\r\n\r\n  Enables you to keep track of events\r\n\r\n  ~ How can I use? ~\r\n\r\n  const setPurposeEvents = useEventListener(readContracts, \"YourContract\", \"SetPurpose\", localProvider, 1);\r\n\r\n  ~ Features ~\r\n\r\n  - Provide readContracts by loading contracts (see more on ContractLoader.js)\r\n  - Specify the name of the contract, in this case it is \"YourContract\"\r\n  - Specify the name of the event in the contract, in this case we keep track of \"SetPurpose\" event\r\n  - Specify the provider\r\n*/\r\n\r\nexport default function useEventListener(contracts, contractName, eventName, provider, startBlock) {\r\n  const [updates, setUpdates] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (typeof provider !== 'undefined' && typeof startBlock !== 'undefined') {\r\n      // if you want to read _all_ events from your contracts, set this to the block number it is deployed\r\n      provider.resetEventsBlock(startBlock);\r\n    }\r\n    if (contracts && contractName && contracts[contractName]) {\r\n      try {\r\n        contracts[contractName].on(eventName, (...args) => {\r\n          const blockNumber = args[args.length - 1].blockNumber;\r\n          setUpdates(messages => [{ blockNumber, ...args.pop().args }, ...messages]);\r\n        });\r\n        return () => {\r\n          contracts[contractName].removeListener(eventName);\r\n        };\r\n      } catch (e) {\r\n        console.log(e);\r\n      }\r\n    }\r\n  }, [provider, startBlock, contracts, contractName, eventName]);\r\n\r\n  return updates;\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { ApolloClient, ApolloProvider, InMemoryCache } from '@apollo/client';\r\n\r\nimport App from './App';\r\nimport './index.css';\r\n\r\nconst subgraphUri = 'http://localhost:8000/subgraphs/name/scaffold-eth/your-contract';\r\n\r\nconst client = new ApolloClient({\r\n  uri: subgraphUri,\r\n  cache: new InMemoryCache(),\r\n});\r\n\r\nReactDOM.render(\r\n  <ApolloProvider client={client}>\r\n    <App subgraphUri={subgraphUri} />\r\n  </ApolloProvider>,\r\n  document.getElementById('root'),\r\n);\r\n","var map = {\n\t\"./TrustFundManager.abi.js\": 1190,\n\t\"./USDMToken.abi.js\": 1191,\n\t\"./YourContract.abi.js\": 1192\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 649;","var map = {\n\t\"./TrustFundManager.bytecode.js\": 1193,\n\t\"./USDMToken.bytecode.js\": 1194,\n\t\"./YourContract.bytecode.js\": 1195\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 650;"],"sourceRoot":""}